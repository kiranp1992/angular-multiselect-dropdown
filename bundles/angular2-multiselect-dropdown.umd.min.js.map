{"version":3,"sources":["ng://angular2-multiselect-dropdown/lib/multiselect.model.ts","ng://angular2-multiselect-dropdown/lib/clickOutside.ts","ng://angular2-multiselect-dropdown/lib/multiselect.service.ts","ng://angular2-multiselect-dropdown/lib/list-filter.ts","ng://angular2-multiselect-dropdown/lib/menu-item.ts","ng://angular2-multiselect-dropdown/lib/virtual-scroll/virtual-scroll.ts","ng://angular2-multiselect-dropdown/lib/multiselect.component.ts"],"names":["MyException","status","body","this","ClickOutsideDirective","_elementRef","clickOutside","EventEmitter","prototype","onClick","event","targetElement","nativeElement","contains","emit","Directive","args","selector","ElementRef","Output","HostListener","type","ScrollDirective","scroll","styleDirective","el","ngOnInit","style","top","styleVal","ngOnChanges","Input","setPosition","height","bottom","parseInt","DataService","filteredData","subject","Subject","setData","data","next","getData","asObservable","getFilteredData","length","Injectable","ListFilterPipe","ds","filteredList","transform","items","filter","searchBy","_this","item","applyFilter","found","grpTitle","t","toString","toLowerCase","indexOf","prop","Pipe","name","pure","Item","Component","template","ContentChild","TemplateRef","static","Badge","Search","TemplateRenderer","viewContainer","view","createEmbeddedView","$implicit","ngOnDestroy","destroy","ViewContainerRef","CIcon","encapsulation","ViewEncapsulation","None","VIRTUAL_SCROLLER_DEFAULT_OPTIONS_FACTORY","scrollThrottlingTime","scrollDebounceTime","scrollAnimationTime","checkResizeInterval","resizeBypassRefreshThreshold","modifyOverflowStyleOfParentScroll","stripedTable","VirtualScrollerComponent","element","renderer","zone","changeDetectorRef","platformId","options","window","executeRefreshOutsideAngularZone","_enableUnequalChildrenSizes","useMarginInsteadOfTranslate","ssrViewportWidth","ssrViewportHeight","_bufferAmount","_items","compareItems","item1","item2","vsUpdate","vsChange","vsStart","vsEnd","calculatedScrollbarWidth","calculatedScrollbarHeight","padding","previousViewPort","cachedPageSize","previousScrollNumberElements","isAngularUniversalSSR","isPlatformServer","scrollbarWidth","scrollbarHeight","horizontal","resetWrapGroupDimensions","Object","defineProperty","pageInfo","startIndex","endIndex","scrollStartPosition","scrollEndPosition","maxScrollPosition","startIndexWithBuffer","endIndexWithBuffer","value","minMeasuredChildWidth","undefined","minMeasuredChildHeight","enableUnequalChildrenSizes","_scrollThrottlingTime","updateOnScrollFunction","_scrollDebounceTime","_this_1","onScroll","debounce","refresh_internal","throttleTrailing","_checkResizeInterval","addScrollEventHandlers","_horizontal","updateDirection","revertParentOverscroll","scrollElement","getScrollElement","oldParentScrollOverflow","y","x","_parentScroll","removeScrollEventHandlers","changes","indexLengthChanged","cachedItemsLength","firstRun","previousValue","ngDoCheck","viewPortItems","itemsArrayChanged","i","refresh","invalidateAllCachedMeasurements","wrapGroupDimensions","maxChildSizePerWrapGroup","numberOfKnownWrapGroupChildSizes","sumOfKnownWrapGroupChildWidths","sumOfKnownWrapGroupChildHeights","invalidateCachedMeasurementForItem","index","invalidateCachedMeasurementAtIndex","cachedMeasurement","childWidth","childHeight","scrollInto","alignToBeginning","additionalOffset","animationMilliseconds","animationCompletedCallback","scrollToIndex","maxRetries","retryIfNeeded","dimensions","calculateDimensions","desiredStartIndex","Math","min","max","itemCount","scrollToIndex_internal","calculatePadding","wrapGroupsPerPage","_childScrollDim","scrollToPosition","scrollPosition","getElementsOffset","animationRequest","currentTween","stop","setProperty","_scrollType","tweenConfigObj","newTween","tween.Tween","to","easing","tween.Easing","Quadratic","Out","onUpdate","isNaN","onStop","cancelAnimationFrame","start","animate","time","update","runOutsideAngular","requestAnimationFrame","getElementSize","result","getBoundingClientRect","styles","getComputedStyle","marginTop","marginBottom","marginLeft","marginRight","left","right","width","checkScrollElementResized","sizeChanged","boundingRect","previousScrollBoundingRect","widthChange","abs","heightChange","_invisiblePaddingProperty","_offsetType","_pageOffsetType","_marginDir","_translateDir","func","wait","throttled","apply","arguments","timeout","_arguments","setTimeout","clearTimeout","itemsArrayModified","refreshCompletedCallback","maxRunTimes","oldViewPort_1","oldViewPortItems_1","oldRefreshCompletedCallback_1","scrollLengthDelta","scrollLength","oldStartItem_1","oldStartItemIndex","findIndex","itemOrderChanged","viewport","calculateViewport","startChanged","endChanged","scrollLengthChanged","paddingChanged","scrollPositionChanged","setStyle","invisiblePaddingElementRef","contentElementRef","headerElementRef","containerOffset","offset","clientHeight","changeEventArg","handleChanged","slice","markForCheck","run","parentScroll","Window","document","scrollingElement","documentElement","disposeScrollHandler","listen","disposeResizeHandler","checkScrollElementResizedTimer","setInterval","clearInterval","containerElementRef","elementClientRect","scrollClientRect","countItemsPerWrapGroup","round","ssrChildHeight","ssrChildWidth","propertyName","children","childrenLength","firstOffset","getScrollStartPosition","windowScrollValue","oldWrapGroupDimensions","itemsPerWrapGroup","wrapGroupIndex","oldWrapGroupDimension","itemsChanged","arrayStartIndex","offsetHeight","offsetWidth","clientWidth","defaultChildWidth","defaultChildHeight","viewportWidth","viewportHeight","content","itemsPerRow","ceil","itemsPerCol","scrollOffset","maxWidthForWrapGroup","maxHeightForWrapGroup","sumOfVisibleMaxWidths","sumOfVisibleMaxHeights","child","clientRect","oldValue","maxVisibleWidthForWrapGroup","scrollOffsetToRemove","maxVisibleHeightForWrapGroup","averageChildWidth","averageChildHeight","itemsPerPage","pageCount_fractional","numberOfWrapGroups","defaultScrollLengthPerWrapGroup","numUnknownChildSizes","childSize","viewportLength","arrayStartIndexWithBuffer","startingWrapGroupIndex","floor","calculatePageInfo","scrollPercentage","totalScrolledLength","startingArrayIndex_fractional","maxStart","bufferBoundary","arrayEndIndex","endIndexWithinWrapGroup","bufferSize","bufferAmount","newPadding","newScrollLength","exportAs","host","[class.horizontal]","[class.vertical]","[class.selfScroll]","Renderer2","NgZone","ChangeDetectorRef","decorators","Inject","PLATFORM_ID","Optional","ViewChild","read","VirtualScrollerModule","NgModule","exports","declarations","imports","CommonModule","providers","provide","useFactory","DROPDOWN_CONTROL_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","useExisting","forwardRef","AngularMultiSelect","multi","DROPDOWN_CONTROL_VALIDATION","NG_VALIDATORS","noop","cdr","onSelect","onDeSelect","onSelectAll","onDeSelectAll","onOpen","onClose","onScrollToEnd","onFilterSelectAll","onFilterDeSelectAll","onAddFilterNewItem","onGroupSelect","onGroupDeSelect","virtualdata","searchTerm$","isActive","isSelectAll","isFilterSelectAll","isInfiniteFilterSelectAll","chunkIndex","cachedItems","groupCachedItems","itemHeight","filterLength","infiniteFilterLength","dropdownListYOffset","defaultSettings","singleSelection","text","enableCheckAll","selectAllText","unSelectAllText","filterSelectAllText","filterUnSelectAllText","enableSearchFilter","maxHeight","badgeShowLimit","classes","disabled","searchPlaceholderText","showCheckbox","noDataLabel","searchAutofocus","lazyLoading","labelKey","primaryKey","position","autoPosition","enableFilterSelectAll","selectGroup","addNewItemOnFilter","addNewButtonText","escapeToClose","clearAll","randomSize","virtualScroollInit","onTouchedCallback","onChangeCallback","pipe","debounceTime","distinctUntilChanged","tap","term","subscribe","val","filterInfiniteList","onEscapeDown","settings","closeDropdown","assign","cloneArray","selectedListHeight","selectedListElem","subscription","len_1","forEach","obj","hasOwnProperty","onFilterChange","calculateDropdownDirection","firstChange","groupBy","groupedData","transformData","selectedItems","loading","console","log","currentValue","ngAfterViewInit","ngAfterViewChecked","detectChanges","onItemClick","evt","isSelected","limit","limitSelection","removeSelected","addSelected","updateGroupInfo","validate","c","writeValue","msg","e","error","registerOnChange","fn","registerOnTouched","trackByFn","clickedItem","push","splice","toggleDropdown","searchInput","searchTempl","focus","preventDefault","openDropdown","closeDropdownOnClickOut","clearSearch","toggleSelectAll","selected","filterGroupedList","arr","list","itemName","some","cat","toggleFilterSelectAll","removed_1","added_1","toggleInfiniteFilterSelectAll","cnt","Array","isArray","JSON","parse","stringify","key","field","groupedObj","reduce","prev","cur","tempArr","keys","map","filteredElems","this_1","virtualScroller","resetInfiniteSearch","onScrollEnd","unsubscribe","addFilterNewItem","filterPipe","dropdownHeight","dropdownListElem","selectedListBounds","spaceOnTop","openTowardsTop","clearSelection","[class]","AngularMultiSelectModule","FormsModule"],"mappings":"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","sourcesContent":["export class MyException {\n\tstatus : number;\n\tbody : any;\n\tconstructor(status : number, body : any) {\n\t\tthis.status = status;\n\t\tthis.body = body;\n\t}\n\t\n}","import { Directive, ElementRef, Output, EventEmitter, HostListener, Input, OnInit, OnChanges } from '@angular/core';\n\n@Directive({\n    selector: '[clickOutside]'\n})\nexport class ClickOutsideDirective {\n    constructor(private _elementRef: ElementRef) {\n    }\n\n    @Output()\n    public clickOutside = new EventEmitter<MouseEvent>();\n\n    @HostListener('document:click', ['$event', '$event.target'])\n    @HostListener('document:touchstart', ['$event', '$event.target'])\n    public onClick(event: MouseEvent, targetElement: HTMLElement): void {\n        if (!targetElement) {\n            return;\n        }\n\n        const clickedInside = this._elementRef.nativeElement.contains(targetElement);\n        if (!clickedInside) {\n            this.clickOutside.emit(event);\n        }\n    }\n}\n\n@Directive({\n    selector: '[scroll]'\n})\nexport class ScrollDirective {\n    constructor(private _elementRef: ElementRef) {\n    }\n\n    @Output()\n    public scroll = new EventEmitter<MouseEvent>();\n\n    @HostListener('scroll', ['$event'])\n    public onClick(event: MouseEvent, targetElement: HTMLElement): void {\n        this.scroll.emit(event);\n    }\n}\n@Directive({\n    selector: '[styleProp]'\n})\nexport class styleDirective {\n\n    constructor(private el: ElementRef) {\n\n    }\n\n    @Input('styleProp') styleVal: number;\n\n    ngOnInit() {\n\n        this.el.nativeElement.style.top = this.styleVal;\n    }\n    ngOnChanges(): void {\n        this.el.nativeElement.style.top = this.styleVal;\n    }\n}\n\n\n@Directive({\n    selector: '[setPosition]'\n})\nexport class setPosition implements OnInit, OnChanges {\n\n    @Input('setPosition') height: number;\n\n    constructor(public el: ElementRef) {\n\n    }\n    ngOnInit() {\n        if (this.height) {\n            this.el.nativeElement.style.bottom = parseInt(this.height + 15 + \"\") + 'px';\n        }\n    }\n    ngOnChanges(): void {\n        if (this.height) {\n            this.el.nativeElement.style.bottom = parseInt(this.height + 15 + \"\") + 'px';\n        }\n    }\n}","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n\n@Injectable()\nexport class DataService {\n\n  filteredData: any = [];\n  private subject = new Subject<any>();\n\n  setData(data: any) {\n\n    this.filteredData = data;\n    this.subject.next(data);\n  }\n  getData(): Observable<any> {\n    return this.subject.asObservable();\n  }\n  getFilteredData() {\n    if (this.filteredData && this.filteredData.length > 0) {\n      return this.filteredData;\n    }\n    else {\n      return [];\n    }\n  }\n\n}","import { Pipe, PipeTransform } from '@angular/core';\nimport { DataService } from './multiselect.service';\n\n\n@Pipe({\n    name: 'listFilter',\n    pure: true\n})\nexport class ListFilterPipe implements PipeTransform {\n\n    public filteredList: any = [];\n    constructor(private ds: DataService) {\n\n    }\n\n    transform(items: any[], filter: any, searchBy: any): any[] {\n        if (!items || !filter) {\n            this.ds.setData(items);\n            return items;\n        }\n        this.filteredList = items.filter((item: any) => this.applyFilter(item, filter, searchBy));\n        this.ds.setData(this.filteredList);\n        return this.filteredList;\n    }\n    applyFilter(item: any, filter: any, searchBy: any): boolean {\n        let found = false;\n        if (searchBy.length > 0) {\n            if (item.grpTitle) {\n                found = true;\n            }\n            else {\n                for (var t = 0; t < searchBy.length; t++) {\n                    if (filter && item[searchBy[t]] && item[searchBy[t]] != \"\") {\n                        if (item[searchBy[t]].toString().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n                            found = true;\n                        }\n                    }\n                }\n            }\n\n        } else {\n            if (item.grpTitle) {\n                found = true;\n            }\n            else {\n                for (var prop in item) {\n                    if (filter && item[prop]) {\n                        if (item[prop].toString().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n                            found = true;\n                        }\n                    }\n                }\n            }\n        }\n\n        return found;\n    }\n}","import { Component, OnInit, OnDestroy, NgModule, TemplateRef, AfterContentInit, ContentChild, EmbeddedViewRef, OnChanges, ViewContainerRef, ViewEncapsulation, Input, Output, EventEmitter, ElementRef, AfterViewInit, Pipe, PipeTransform, Directive } from '@angular/core';\nimport { SafeResourceUrl, DomSanitizer } from '@angular/platform-browser';\nimport { CommonModule }       from '@angular/common';\n\n@Component({\n  selector: 'c-item',\n  template: ``\n})\n\nexport class Item { \n\n    @ContentChild(TemplateRef, {static: true}) template: TemplateRef<any>\n    constructor() {   \n    }\n\n}\n\n@Component({\n  selector: 'c-badge',\n  template: ``\n})\n\nexport class Badge { \n\n    @ContentChild(TemplateRef, {static: true}) template: TemplateRef<any>\n    constructor() {   \n    }\n\n}\n\n@Component({\n  selector: 'c-search',\n  template: ``\n})\n\nexport class Search { \n\n    @ContentChild(TemplateRef, {static: true}) template: TemplateRef<any>\n    constructor() {   \n    }\n\n}\n@Component({\n  selector: 'c-templateRenderer',\n  template: ``\n})\n\nexport class TemplateRenderer implements OnInit, OnDestroy { \n\n    @Input() data: any\n    @Input() item: any\n    view: EmbeddedViewRef<any>;\n\n    constructor(public viewContainer: ViewContainerRef) {   \n    }\n    ngOnInit() {\n        this.view = this.viewContainer.createEmbeddedView(this.data.template, {\n            '\\$implicit': this.data,\n            'item':this.item\n        });\n    }\n\t\n    ngOnDestroy() {\n\t\tthis.view.destroy();\n\t}\n\n}\n\n@Component({\n  selector: 'c-icon',\n  template: `<svg *ngIf=\"name == 'remove'\" width=\"100%\" height=\"100%\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n                        viewBox=\"0 0 47.971 47.971\" style=\"enable-background:new 0 0 47.971 47.971;\" xml:space=\"preserve\">\n                        <g>\n                            <path d=\"M28.228,23.986L47.092,5.122c1.172-1.171,1.172-3.071,0-4.242c-1.172-1.172-3.07-1.172-4.242,0L23.986,19.744L5.121,0.88\n                                c-1.172-1.172-3.07-1.172-4.242,0c-1.172,1.171-1.172,3.071,0,4.242l18.865,18.864L0.879,42.85c-1.172,1.171-1.172,3.071,0,4.242\n                                C1.465,47.677,2.233,47.97,3,47.97s1.535-0.293,2.121-0.879l18.865-18.864L42.85,47.091c0.586,0.586,1.354,0.879,2.121,0.879\n                                s1.535-0.293,2.121-0.879c1.172-1.171,1.172-3.071,0-4.242L28.228,23.986z\"/>\n                        </g>\n                    </svg>\n            <svg *ngIf=\"name == 'angle-down'\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t width=\"100%\" height=\"100%\" viewBox=\"0 0 612 612\" style=\"enable-background:new 0 0 612 612;\" xml:space=\"preserve\">\n<g>\n\t<g id=\"_x31_0_34_\">\n\t\t<g>\n\t\t\t<path d=\"M604.501,134.782c-9.999-10.05-26.222-10.05-36.221,0L306.014,422.558L43.721,134.782\n\t\t\t\tc-9.999-10.05-26.223-10.05-36.222,0s-9.999,26.35,0,36.399l279.103,306.241c5.331,5.357,12.422,7.652,19.386,7.296\n\t\t\t\tc6.988,0.356,14.055-1.939,19.386-7.296l279.128-306.268C614.5,161.106,614.5,144.832,604.501,134.782z\"/>\n\t\t</g>\n\t</g>\n</g>\n</svg>\n<svg *ngIf=\"name == 'angle-up'\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t width=\"100%\" height=\"100%\" viewBox=\"0 0 612 612\" style=\"enable-background:new 0 0 612 612;\" xml:space=\"preserve\">\n<g>\n\t<g id=\"_x39__30_\">\n\t\t<g>\n\t\t\t<path d=\"M604.501,440.509L325.398,134.956c-5.331-5.357-12.423-7.627-19.386-7.27c-6.989-0.357-14.056,1.913-19.387,7.27\n\t\t\t\tL7.499,440.509c-9.999,10.024-9.999,26.298,0,36.323s26.223,10.024,36.222,0l262.293-287.164L568.28,476.832\n\t\t\t\tc9.999,10.024,26.222,10.024,36.221,0C614.5,466.809,614.5,450.534,604.501,440.509z\"/>\n\t\t</g>\n\t</g>\n</g>\n\n</svg>\n<svg *ngIf=\"name == 'search'\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t width=\"100%\" height=\"100%\" viewBox=\"0 0 615.52 615.52\" style=\"enable-background:new 0 0 615.52 615.52;\"\n\t xml:space=\"preserve\">\n<g>\n\t<g>\n\t\t<g id=\"Search__x28_and_thou_shall_find_x29_\">\n\t\t\t<g>\n\t\t\t\t<path d=\"M602.531,549.736l-184.31-185.368c26.679-37.72,42.528-83.729,42.528-133.548C460.75,103.35,357.997,0,231.258,0\n\t\t\t\t\tC104.518,0,1.765,103.35,1.765,230.82c0,127.47,102.753,230.82,229.493,230.82c49.53,0,95.271-15.944,132.78-42.777\n\t\t\t\t\tl184.31,185.366c7.482,7.521,17.292,11.291,27.102,11.291c9.812,0,19.62-3.77,27.083-11.291\n\t\t\t\t\tC617.496,589.188,617.496,564.777,602.531,549.736z M355.9,319.763l-15.042,21.273L319.7,356.174\n\t\t\t\t\tc-26.083,18.658-56.667,28.526-88.442,28.526c-84.365,0-152.995-69.035-152.995-153.88c0-84.846,68.63-153.88,152.995-153.88\n\t\t\t\t\ts152.996,69.034,152.996,153.88C384.271,262.769,374.462,293.526,355.9,319.763z\"/>\n\t\t\t</g>\n\t\t</g>\n\t</g>\n</g>\n\n</svg>\n<svg *ngIf=\"name == 'clear'\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 51.976 51.976\" style=\"enable-background:new 0 0 51.976 51.976;\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M44.373,7.603c-10.137-10.137-26.632-10.138-36.77,0c-10.138,10.138-10.137,26.632,0,36.77s26.632,10.138,36.77,0\n\t\tC54.51,34.235,54.51,17.74,44.373,7.603z M36.241,36.241c-0.781,0.781-2.047,0.781-2.828,0l-7.425-7.425l-7.778,7.778\n\t\tc-0.781,0.781-2.047,0.781-2.828,0c-0.781-0.781-0.781-2.047,0-2.828l7.778-7.778l-7.425-7.425c-0.781-0.781-0.781-2.048,0-2.828\n\t\tc0.781-0.781,2.047-0.781,2.828,0l7.425,7.425l7.071-7.071c0.781-0.781,2.047-0.781,2.828,0c0.781,0.781,0.781,2.047,0,2.828\n\t\tl-7.071,7.071l7.425,7.425C37.022,34.194,37.022,35.46,36.241,36.241z\"/>\n</g>\n</svg>`,\n  encapsulation: ViewEncapsulation.None,\n\n})\n\nexport class CIcon { \n\n    @Input() name:any;\n\n}","import {\n\tComponent,\n\tContentChild,\n\tElementRef,\n\tEventEmitter,\n\tInject,\n\tOptional,\n\tInput,\n\tNgModule,\n\tNgZone,\n\tOnChanges,\n\tOnDestroy,\n\tOnInit,\n\tOutput,\n\tRenderer2,\n\tViewChild,\n\tChangeDetectorRef,\n\tInjectionToken\n} from '@angular/core';\n\nimport { PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\nimport { CommonModule } from '@angular/common';\n\nimport * as tween from '@tweenjs/tween.js'\nimport { VirtualScrollerDefaultOptions } from './defaultoptions';\nimport { IPageInfo } from './ipageinfo';\nimport { IViewport } from './iviewport';\n\nimport { WrapGroupDimensions } from './wrapgroupdimensions';\nimport { WrapGroupDimension } from './wrapgroupdimension';\n\nimport { IDimensions } from './idimension';\n\n \n\n\n\nexport function VIRTUAL_SCROLLER_DEFAULT_OPTIONS_FACTORY(): VirtualScrollerDefaultOptions {\n\treturn {\n\t\tscrollThrottlingTime: 0,\n\t\tscrollDebounceTime: 0,\n\t\tscrollAnimationTime: 750,\n\t\tcheckResizeInterval: 1000,\n\t\tresizeBypassRefreshThreshold: 5,\n\t\tmodifyOverflowStyleOfParentScroll: true,\n\t\tstripedTable: false\n\t};\n}\n\n\n\n\n\n\n\n\n\n\n\n@Component({\n\tselector: 'virtual-scroller,[virtualScroller]',\n\texportAs: 'virtualScroller',\n\ttemplate: `\n    <div class=\"total-padding\" #invisiblePadding></div>\n    <div class=\"scrollable-content\" #content>\n      <ng-content></ng-content>\n    </div>\n  `,\n\thost: {\n\t\t'[class.horizontal]': \"horizontal\",\n\t\t'[class.vertical]': \"!horizontal\",\n\t\t'[class.selfScroll]': \"!parentScroll\"\n\t},\n\tstyles: [`\n    :host {\n      position: relative;\n\t  display: block;\n      -webkit-overflow-scrolling: touch;\n    }\n\t\n\t:host.horizontal.selfScroll {\n      overflow-y: visible;\n      overflow-x: auto;\n\t}\n\t:host.vertical.selfScroll {\n      overflow-y: auto;\n      overflow-x: visible;\n\t}\n\t\n    .scrollable-content {\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      max-width: 100vw;\n      max-height: 100vh;\n      position: absolute;\n    }\n\n\t.scrollable-content ::ng-deep > * {\n\t\tbox-sizing: border-box;\n\t}\n\t\n\t:host.horizontal {\n\t\twhite-space: nowrap;\n\t}\n\t\n\t:host.horizontal .scrollable-content {\n\t\tdisplay: flex;\n\t}\n\t\n\t:host.horizontal .scrollable-content ::ng-deep > * {\n\t\tflex-shrink: 0;\n\t\tflex-grow: 0;\n\t\twhite-space: initial;\n\t}\n\t\n    .total-padding {\n      width: 1px;\n      opacity: 0;\n    }\n    \n    :host.horizontal .total-padding {\n      height: 100%;\n    }\n  `]\n})\nexport class VirtualScrollerComponent implements OnInit, OnChanges, OnDestroy {\n\tpublic viewPortItems: any[];\n\tpublic window = window;\n\n\tpublic get viewPortInfo(): IPageInfo {\n\t\tlet pageInfo: IViewport = this.previousViewPort || <any>{};\n\t\treturn {\n\t\t\tstartIndex: pageInfo.startIndex || 0,\n\t\t\tendIndex: pageInfo.endIndex || 0,\n\t\t\tscrollStartPosition: pageInfo.scrollStartPosition || 0,\n\t\t\tscrollEndPosition: pageInfo.scrollEndPosition || 0,\n\t\t\tmaxScrollPosition: pageInfo.maxScrollPosition || 0,\n\t\t\tstartIndexWithBuffer: pageInfo.startIndexWithBuffer || 0,\n\t\t\tendIndexWithBuffer: pageInfo.endIndexWithBuffer || 0\n\t\t};\n\t}\n\n\t@Input()\n\tpublic executeRefreshOutsideAngularZone: boolean = false;\n\n\tprotected _enableUnequalChildrenSizes: boolean = false;\n\t@Input()\n\tpublic get enableUnequalChildrenSizes(): boolean {\n\t\treturn this._enableUnequalChildrenSizes;\n\t}\n\tpublic set enableUnequalChildrenSizes(value: boolean) {\n\t\tif (this._enableUnequalChildrenSizes === value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._enableUnequalChildrenSizes = value;\n\t\tthis.minMeasuredChildWidth = undefined;\n\t\tthis.minMeasuredChildHeight = undefined;\n\t}\n\n\t@Input()\n\tpublic useMarginInsteadOfTranslate: boolean = false;\n\n\t@Input()\n\tpublic modifyOverflowStyleOfParentScroll: boolean;\n\n\t@Input()\n\tpublic stripedTable: boolean;\n\n\t@Input()\n\tpublic scrollbarWidth: number;\n\n\t@Input()\n\tpublic scrollbarHeight: number;\n\n\t@Input()\n\tpublic childWidth: number;\n\n\t@Input()\n\tpublic childHeight: number;\n\n\t@Input()\n\tpublic ssrChildWidth: number;\n\n\t@Input()\n\tpublic ssrChildHeight: number;\n\n\t@Input()\n\tpublic ssrViewportWidth: number = 1920;\n\n\t@Input()\n\tpublic ssrViewportHeight: number = 1080;\n\n\tprotected _bufferAmount: number = 0;\n\t@Input()\n\tpublic get bufferAmount(): number {\n\t\tif (typeof (this._bufferAmount) === 'number' && this._bufferAmount >= 0) {\n\t\t\treturn this._bufferAmount;\n\t\t} else {\n\t\t\treturn this.enableUnequalChildrenSizes ? 5 : 0;\t\n\t\t}\n\t}\n\tpublic set bufferAmount(value: number) {\n\t\tthis._bufferAmount = value;\n\t}\n\n\t@Input()\n\tpublic scrollAnimationTime: number;\n\n\t@Input()\n\tpublic resizeBypassRefreshThreshold: number;\n\n\tprotected _scrollThrottlingTime: number;\n\t@Input()\n\tpublic get scrollThrottlingTime(): number {\n\t\treturn this._scrollThrottlingTime;\n\t}\n\tpublic set scrollThrottlingTime(value: number) {\n\t\tthis._scrollThrottlingTime = value;\n\t\tthis.updateOnScrollFunction();\n\t}\n\n\tprotected _scrollDebounceTime: number;\n\t@Input()\n\tpublic get scrollDebounceTime(): number {\n\t\treturn this._scrollDebounceTime;\n\t}\n\tpublic set scrollDebounceTime(value: number) {\n\t\tthis._scrollDebounceTime = value;\n\t\tthis.updateOnScrollFunction();\n\t}\n\n\tprotected onScroll: () => void;\n\tprotected updateOnScrollFunction(): void {\n\t\tif (this.scrollDebounceTime) {\n\t\t\tthis.onScroll = <any>this.debounce(() => {\n\t\t\t\tthis.refresh_internal(false);\n\t\t\t}, this.scrollDebounceTime);\n\t\t}\n\t\telse if (this.scrollThrottlingTime) {\n\t\t\tthis.onScroll = <any>this.throttleTrailing(() => {\n\t\t\t\tthis.refresh_internal(false);\n\t\t\t}, this.scrollThrottlingTime);\n\t\t}\n\t\telse {\n\t\t\tthis.onScroll = () => {\n\t\t\t\tthis.refresh_internal(false);\n\t\t\t};\n\t\t}\n\t}\n\n\tprotected checkScrollElementResizedTimer: number;\n\tprotected _checkResizeInterval: number;\n\t@Input()\n\tpublic get checkResizeInterval(): number {\n\t\treturn this._checkResizeInterval;\n\t}\n\tpublic set checkResizeInterval(value: number) {\n\t\tif (this._checkResizeInterval === value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._checkResizeInterval = value;\n\t\tthis.addScrollEventHandlers();\n\t}\n\n\tprotected _items: any[] = [];\n\t@Input()\n\tpublic get items(): any[] {\n\t\treturn this._items;\n\t}\n\tpublic set items(value: any[]) {\n\t\tif (value === this._items) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._items = value || [];\n\t\tthis.refresh_internal(true);\n\t}\n\n\t@Input()\n\tpublic compareItems: (item1: any, item2: any) => boolean = (item1: any, item2: any) => item1 === item2;\n\n\tprotected _horizontal: boolean;\n\t@Input()\n\tpublic get horizontal(): boolean {\n\t\treturn this._horizontal;\n\t}\n\tpublic set horizontal(value: boolean) {\n\t\tthis._horizontal = value;\n\t\tthis.updateDirection();\n\t}\n\n\tprotected revertParentOverscroll(): void {\n\t\tconst scrollElement = this.getScrollElement();\n\t\tif (scrollElement && this.oldParentScrollOverflow) {\n\t\t\tscrollElement.style['overflow-y'] = this.oldParentScrollOverflow.y;\n\t\t\tscrollElement.style['overflow-x'] = this.oldParentScrollOverflow.x;\n\t\t}\n\n\t\tthis.oldParentScrollOverflow = undefined;\n\t}\n\n\tprotected oldParentScrollOverflow: { x: string, y: string };\n\tprotected _parentScroll: Element | Window;\n\t@Input()\n\tpublic get parentScroll(): Element | Window {\n\t\treturn this._parentScroll;\n\t}\n\tpublic set parentScroll(value: Element | Window) {\n\t\tif (this._parentScroll === value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.revertParentOverscroll();\n\t\tthis._parentScroll = value;\n\t\tthis.addScrollEventHandlers();\n\n\t\tconst scrollElement = this.getScrollElement();\n\t\tif (this.modifyOverflowStyleOfParentScroll && scrollElement !== this.element.nativeElement) {\n\t\t\tthis.oldParentScrollOverflow = { x: scrollElement.style['overflow-x'], y: scrollElement.style['overflow-y'] };\n\t\t\tscrollElement.style['overflow-y'] = this.horizontal ? 'visible' : 'auto';\n\t\t\tscrollElement.style['overflow-x'] = this.horizontal ? 'auto' : 'visible';\n\t\t}\n\t}\n\n\t@Output()\n\tpublic vsUpdate: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n\t@Output()\n\tpublic vsChange: EventEmitter<IPageInfo> = new EventEmitter<IPageInfo>();\n\n\t@Output()\n\tpublic vsStart: EventEmitter<IPageInfo> = new EventEmitter<IPageInfo>();\n\n\t@Output()\n\tpublic vsEnd: EventEmitter<IPageInfo> = new EventEmitter<IPageInfo>();\n\n\t@ViewChild('content', { read: ElementRef, static: false })\n\tprotected contentElementRef: ElementRef;\n\n\t@ViewChild('invisiblePadding', { read: ElementRef, static: false })\n\tprotected invisiblePaddingElementRef: ElementRef;\n\n\t@ContentChild('header', { read: ElementRef, static: false })\n\tprotected headerElementRef: ElementRef;\n\n\t@ContentChild('container', { read: ElementRef, static: false })\n\tprotected containerElementRef: ElementRef;\n\n\tpublic ngOnInit(): void {\n\t\tthis.addScrollEventHandlers();\n\t}\n\n\tpublic ngOnDestroy(): void {\n\t\tthis.removeScrollEventHandlers();\n\t\tthis.revertParentOverscroll();\n\t}\n\n\tpublic ngOnChanges(changes: any): void {\n\t\tlet indexLengthChanged = this.cachedItemsLength !== this.items.length;\n\t\tthis.cachedItemsLength = this.items.length;\n\n\t\tconst firstRun: boolean = !changes.items || !changes.items.previousValue || changes.items.previousValue.length === 0;\n\t\tthis.refresh_internal(indexLengthChanged || firstRun);\n\t}\n\n\t\n\tpublic ngDoCheck(): void {\n\t\tif (this.cachedItemsLength !== this.items.length) {\n\t\t\tthis.cachedItemsLength = this.items.length;\n\t\t\tthis.refresh_internal(true);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (this.previousViewPort && this.viewPortItems && this.viewPortItems.length > 0) {\n\t\t\tlet itemsArrayChanged = false;\n\t\t\tfor (let i = 0; i < this.viewPortItems.length; ++i) {\n\t\t\t\tif (!this.compareItems(this.items[this.previousViewPort.startIndexWithBuffer + i], this.viewPortItems[i])) {\n\t\t\t\t\titemsArrayChanged = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (itemsArrayChanged) {\n\t\t\t\tthis.refresh_internal(true);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic refresh(): void {\n\t\tthis.refresh_internal(true);\n\t}\n\n\tpublic invalidateAllCachedMeasurements(): void {\n\t\tthis.wrapGroupDimensions = {\n\t\t\tmaxChildSizePerWrapGroup: [],\n\t\t\tnumberOfKnownWrapGroupChildSizes: 0,\n\t\t\tsumOfKnownWrapGroupChildWidths: 0,\n\t\t\tsumOfKnownWrapGroupChildHeights: 0\n\t\t};\n\n\t\tthis.minMeasuredChildWidth = undefined;\n\t\tthis.minMeasuredChildHeight = undefined;\n\n\t\tthis.refresh_internal(false);\n\t}\n\n\tpublic invalidateCachedMeasurementForItem(item: any): void {\n\t\tif (this.enableUnequalChildrenSizes) {\n\t\t\tlet index = this.items && this.items.indexOf(item);\n\t\t\tif (index >= 0) {\n\t\t\t\tthis.invalidateCachedMeasurementAtIndex(index);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.minMeasuredChildWidth = undefined;\n\t\t\tthis.minMeasuredChildHeight = undefined;\n\t\t}\n\n\t\tthis.refresh_internal(false);\n\t}\n\n\tpublic invalidateCachedMeasurementAtIndex(index: number): void {\n\t\tif (this.enableUnequalChildrenSizes) {\n\t\t\tlet cachedMeasurement = this.wrapGroupDimensions.maxChildSizePerWrapGroup[index];\n\t\t\tif (cachedMeasurement) {\n\t\t\t\tthis.wrapGroupDimensions.maxChildSizePerWrapGroup[index] = undefined;\n\t\t\t\t--this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths -= cachedMeasurement.childWidth || 0;\n\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights -= cachedMeasurement.childHeight || 0;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.minMeasuredChildWidth = undefined;\n\t\t\tthis.minMeasuredChildHeight = undefined;\n\t\t}\n\n\t\tthis.refresh_internal(false);\n\t}\n\n\tpublic scrollInto(item: any, alignToBeginning: boolean = true, additionalOffset: number = 0, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined): void {\n\t\tlet index: number = this.items.indexOf(item);\n\t\tif (index === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.scrollToIndex(index, alignToBeginning, additionalOffset, animationMilliseconds, animationCompletedCallback);\n\t}\n\n\tpublic scrollToIndex(index: number, alignToBeginning: boolean = true, additionalOffset: number = 0, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined): void {\n\t\tlet maxRetries: number = 5;\n\n\t\tlet retryIfNeeded = () => {\n\t\t\t--maxRetries;\n\t\t\tif (maxRetries <= 0) {\n\t\t\t\tif (animationCompletedCallback) {\n\t\t\t\t\tanimationCompletedCallback();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet dimensions = this.calculateDimensions();\n\t\t\tlet desiredStartIndex = Math.min(Math.max(index, 0), dimensions.itemCount - 1);\n\t\t\tif (this.previousViewPort.startIndex === desiredStartIndex) {\n\t\t\t\tif (animationCompletedCallback) {\n\t\t\t\t\tanimationCompletedCallback();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.scrollToIndex_internal(index, alignToBeginning, additionalOffset, 0, retryIfNeeded);\n\t\t};\n\n\t\tthis.scrollToIndex_internal(index, alignToBeginning, additionalOffset, animationMilliseconds, retryIfNeeded);\n\t}\n\n\tprotected scrollToIndex_internal(index: number, alignToBeginning: boolean = true, additionalOffset: number = 0, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined): void {\n\t\tanimationMilliseconds = animationMilliseconds === undefined ? this.scrollAnimationTime : animationMilliseconds;\n\n\t\tlet dimensions = this.calculateDimensions();\n\t\tlet scroll = this.calculatePadding(index, dimensions) + additionalOffset;\n\t\tif (!alignToBeginning) {\n\t\t\tscroll -= dimensions.wrapGroupsPerPage * dimensions[this._childScrollDim];\n\t\t}\n\n\t\tthis.scrollToPosition(scroll, animationMilliseconds, animationCompletedCallback);\n\t}\n\n\tpublic scrollToPosition(scrollPosition: number, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined): void {\n\t\tscrollPosition += this.getElementsOffset();\n\n\t\tanimationMilliseconds = animationMilliseconds === undefined ? this.scrollAnimationTime : animationMilliseconds;\n\n\t\tlet scrollElement = this.getScrollElement();\n\n\t\tlet animationRequest: number;\n\n\t\tif (this.currentTween) {\n\t\t\tthis.currentTween.stop();\n\t\t\tthis.currentTween = undefined;\n\t\t}\n\n\t\tif (!animationMilliseconds) {\n\t\t\tthis.renderer.setProperty(scrollElement, this._scrollType, scrollPosition);\n\t\t\tthis.refresh_internal(false, animationCompletedCallback);\n\t\t\treturn;\n\t\t}\n\n\t\tconst tweenConfigObj = { scrollPosition: scrollElement[this._scrollType] };\n\n\t\tlet newTween = new tween.Tween(tweenConfigObj)\n\t\t\t.to({ scrollPosition }, animationMilliseconds)\n\t\t\t.easing(tween.Easing.Quadratic.Out)\n\t\t\t.onUpdate((data) => {\n\t\t\t\tif (isNaN(data.scrollPosition)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.renderer.setProperty(scrollElement, this._scrollType, data.scrollPosition);\n\t\t\t\tthis.refresh_internal(false);\n\t\t\t})\n\t\t\t.onStop(() => {\n\t\t\t\tcancelAnimationFrame(animationRequest);\n\t\t\t})\n\t\t\t.start();\n\n\t\tconst animate = (time?: number) => {\n\t\t\tif (!newTween[\"isPlaying\"]()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnewTween.update(time);\n\t\t\tif (tweenConfigObj.scrollPosition === scrollPosition) {\n\t\t\t\tthis.refresh_internal(false, animationCompletedCallback);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.zone.runOutsideAngular(() => {\n\t\t\t\tanimationRequest = requestAnimationFrame(animate);\n\t\t\t});\n\t\t};\n\n\t\tanimate();\n\t\tthis.currentTween = newTween;\n\t}\n\n\tprotected isAngularUniversalSSR: boolean;\n\n\tconstructor(protected readonly element: ElementRef,\n\t\tprotected readonly renderer: Renderer2,\n\t\tprotected readonly zone: NgZone,\n\t\tprotected changeDetectorRef: ChangeDetectorRef,\n\t\t@Inject(PLATFORM_ID) platformId: Object,\n\t\t@Optional() @Inject('virtual-scroller-default-options')\n\t\toptions: VirtualScrollerDefaultOptions) {\n\t\t\t\n\t\tthis.isAngularUniversalSSR = isPlatformServer(platformId);\n\n\t\tthis.scrollThrottlingTime = options.scrollThrottlingTime;\n\t\tthis.scrollDebounceTime = options.scrollDebounceTime;\n\t\tthis.scrollAnimationTime = options.scrollAnimationTime;\n\t\tthis.scrollbarWidth = options.scrollbarWidth;\n\t\tthis.scrollbarHeight = options.scrollbarHeight;\n\t\tthis.checkResizeInterval = options.checkResizeInterval;\n\t\tthis.resizeBypassRefreshThreshold = options.resizeBypassRefreshThreshold;\n\t\tthis.modifyOverflowStyleOfParentScroll = options.modifyOverflowStyleOfParentScroll;\n\t\tthis.stripedTable = options.stripedTable;\n\n\t\tthis.horizontal = false;\n\t\tthis.resetWrapGroupDimensions();\n\t}\n\t\n\tprotected getElementSize(element: HTMLElement) : ClientRect {\n\t\tlet result = element.getBoundingClientRect();\n\t\tlet styles = getComputedStyle(element);\n\t\tlet marginTop = parseInt(styles['margin-top'], 10) || 0;\n\t\tlet marginBottom = parseInt(styles['margin-bottom'], 10) || 0;\n\t\tlet marginLeft = parseInt(styles['margin-left'], 10) || 0;\n\t\tlet marginRight = parseInt(styles['margin-right'], 10) || 0;\n\t\t\n\t\treturn {\n\t\t\ttop: result.top + marginTop,\n\t\t\tbottom: result.bottom + marginBottom,\n\t\t\tleft: result.left + marginLeft,\n\t\t\tright: result.right + marginRight,\n\t\t\twidth: result.width + marginLeft + marginRight,\n\t\t\theight: result.height + marginTop + marginBottom\n\t\t};\n\t}\n\n\tprotected previousScrollBoundingRect: ClientRect;\n\tprotected checkScrollElementResized(): void {\n\t\tlet boundingRect = this.getElementSize(this.getScrollElement());\n\n\t\tlet sizeChanged: boolean;\n\t\tif (!this.previousScrollBoundingRect) {\n\t\t\tsizeChanged = true;\n\t\t} else {\n\t\t\tlet widthChange = Math.abs(boundingRect.width - this.previousScrollBoundingRect.width);\n\t\t\tlet heightChange = Math.abs(boundingRect.height - this.previousScrollBoundingRect.height);\n\t\t\tsizeChanged = widthChange > this.resizeBypassRefreshThreshold || heightChange > this.resizeBypassRefreshThreshold;\n\t\t}\n\n\t\tif (sizeChanged) {\n\t\t\tthis.previousScrollBoundingRect = boundingRect;\n\t\t\tif (boundingRect.width > 0 && boundingRect.height > 0) {\n\t\t\t\tthis.refresh_internal(false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _invisiblePaddingProperty;\n\tprotected _offsetType;\n\tprotected _scrollType;\n\tprotected _pageOffsetType;\n\tprotected _childScrollDim;\n\tprotected _translateDir;\n\tprotected _marginDir;\n\tprotected updateDirection(): void {\n\t\tif (this.horizontal) {\n\t\t\tthis._invisiblePaddingProperty = 'width';\n\t\t\tthis._offsetType = 'offsetLeft';\n\t\t\tthis._pageOffsetType = 'pageXOffset';\n\t\t\tthis._childScrollDim = 'childWidth';\n\t\t\tthis._marginDir = 'margin-left';\n\t\t\tthis._translateDir = 'translateX';\n\t\t\tthis._scrollType = 'scrollLeft';\n\t\t}\n\t\telse {\n\t\t\tthis._invisiblePaddingProperty = 'height';\n\t\t\tthis._offsetType = 'offsetTop';\n\t\t\tthis._pageOffsetType = 'pageYOffset';\n\t\t\tthis._childScrollDim = 'childHeight';\n\t\t\tthis._marginDir = 'margin-top';\n\t\t\tthis._translateDir = 'translateY';\n\t\t\tthis._scrollType = 'scrollTop';\n\t\t}\n\t}\n\n\tprotected debounce(func: Function, wait: number): Function {\n\t\tconst throttled = this.throttleTrailing(func, wait);\n\t\tconst result = function () {\n\t\t\tthrottled['cancel']();\n\t\t\tthrottled.apply(this, arguments);\n\t\t};\n\t\tresult['cancel'] = function () {\n\t\t\tthrottled['cancel']();\n\t\t};\n\n\t\treturn result;\n\t}\n\n\tprotected throttleTrailing(func: Function, wait: number): Function {\n\t\tlet timeout = undefined;\n\t\tlet _arguments = arguments;\n\t\tconst result = function () {\n\t\t\tconst _this = this;\n\t\t\t_arguments = arguments\n\n\t\t\tif (timeout) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (wait <= 0) {\n\t\t\t\tfunc.apply(_this, _arguments);\n\t\t\t} else {\n\t\t\t\ttimeout = setTimeout(function () {\n\t\t\t\t\ttimeout = undefined;\n\t\t\t\t\tfunc.apply(_this, _arguments);\n\t\t\t\t}, wait);\n\t\t\t}\n\t\t};\n\t\tresult['cancel'] = function () {\n\t\t\tif (timeout) {\n\t\t\t\tclearTimeout(timeout);\n\t\t\t\ttimeout = undefined;\n\t\t\t}\n\t\t};\n\n\t\treturn result;\n\t}\n\n\tprotected calculatedScrollbarWidth: number = 0;\n\tprotected calculatedScrollbarHeight: number = 0;\n\n\tprotected padding: number = 0;\n\tprotected previousViewPort: IViewport = <any>{};\n\tprotected currentTween: tween.Tween;\n\tprotected cachedItemsLength: number;\n\n\tprotected disposeScrollHandler: () => void | undefined;\n\tprotected disposeResizeHandler: () => void | undefined;\n\n\tprotected refresh_internal(itemsArrayModified: boolean, refreshCompletedCallback: () => void = undefined, maxRunTimes: number = 2): void {\n\t\t//note: maxRunTimes is to force it to keep recalculating if the previous iteration caused a re-render (different sliced items in viewport or scrollPosition changed).\n\t\t//The default of 2x max will probably be accurate enough without causing too large a performance bottleneck\n\t\t//The code would typically quit out on the 2nd iteration anyways. The main time it'd think more than 2 runs would be necessary would be for vastly different sized child items or if this is the 1st time the items array was initialized.\n\t\t//Without maxRunTimes, If the user is actively scrolling this code would become an infinite loop until they stopped scrolling. This would be okay, except each scroll event would start an additional infinte loop. We want to short-circuit it to prevent this.\n\n\t\tif (itemsArrayModified && this.previousViewPort && this.previousViewPort.scrollStartPosition > 0) {\n\t\t//if items were prepended, scroll forward to keep same items visible\n\t\t\tlet oldViewPort = this.previousViewPort;\n\t\t\tlet oldViewPortItems = this.viewPortItems;\n\t\t\t\n\t\t\tlet oldRefreshCompletedCallback = refreshCompletedCallback;\n\t\t\trefreshCompletedCallback = () => {\n\t\t\t\tlet scrollLengthDelta = this.previousViewPort.scrollLength - oldViewPort.scrollLength;\n\t\t\t\tif (scrollLengthDelta > 0 && this.viewPortItems) {\n\t\t\t\t\tlet oldStartItem = oldViewPortItems[0];\n\t\t\t\t\tlet oldStartItemIndex = this.items.findIndex(x => this.compareItems(oldStartItem, x));\n\t\t\t\t\tif (oldStartItemIndex > this.previousViewPort.startIndexWithBuffer) {\n\t\t\t\t\t\tlet itemOrderChanged = false;\n\t\t\t\t\t\tfor (let i = 1; i < this.viewPortItems.length; ++i) {\n\t\t\t\t\t\t\tif (!this.compareItems(this.items[oldStartItemIndex + i], oldViewPortItems[i])) {\n\t\t\t\t\t\t\t\titemOrderChanged = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!itemOrderChanged) {\n\t\t\t\t\t\t\tthis.scrollToPosition(this.previousViewPort.scrollStartPosition + scrollLengthDelta , 0, oldRefreshCompletedCallback);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (oldRefreshCompletedCallback) {\n\t\t\t\t\toldRefreshCompletedCallback();\n\t\t\t\t}\n\t\t\t};\n\t\t}\t\t\t\n\n\t\tthis.zone.runOutsideAngular(() => {\n\t\t\trequestAnimationFrame(() => {\n\n\t\t\t\tif (itemsArrayModified) {\n\t\t\t\t\tthis.resetWrapGroupDimensions();\n\t\t\t\t}\n\t\t\t\tlet viewport = this.calculateViewport();\n\n\t\t\t\tlet startChanged = itemsArrayModified || viewport.startIndex !== this.previousViewPort.startIndex;\n\t\t\t\tlet endChanged = itemsArrayModified || viewport.endIndex !== this.previousViewPort.endIndex;\n\t\t\t\tlet scrollLengthChanged = viewport.scrollLength !== this.previousViewPort.scrollLength;\n\t\t\t\tlet paddingChanged = viewport.padding !== this.previousViewPort.padding;\n\t\t\t\tlet scrollPositionChanged = viewport.scrollStartPosition !== this.previousViewPort.scrollStartPosition || viewport.scrollEndPosition !== this.previousViewPort.scrollEndPosition || viewport.maxScrollPosition !== this.previousViewPort.maxScrollPosition;\n\n\t\t\t\tthis.previousViewPort = viewport;\n\n\t\t\t\tif (scrollLengthChanged) {\n\t\t\t\t\tthis.renderer.setStyle(this.invisiblePaddingElementRef.nativeElement, this._invisiblePaddingProperty, `${viewport.scrollLength}px`);\n\t\t\t\t}\n\n\t\t\t\tif (paddingChanged) {\n\t\t\t\t\tif (this.useMarginInsteadOfTranslate) {\n\t\t\t\t\t\tthis.renderer.setStyle(this.contentElementRef.nativeElement, this._marginDir, `${viewport.padding}px`);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.renderer.setStyle(this.contentElementRef.nativeElement, 'transform', `${this._translateDir}(${viewport.padding}px)`);\n\t\t\t\t\t\tthis.renderer.setStyle(this.contentElementRef.nativeElement, 'webkitTransform', `${this._translateDir}(${viewport.padding}px)`);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.headerElementRef) {\n\t\t\t\t\tlet scrollPosition = this.getScrollElement()[this._scrollType];\n\t\t\t\t\tlet containerOffset = this.getElementsOffset();\n\t\t\t\t\tlet offset = Math.max(scrollPosition - viewport.padding - containerOffset + this.headerElementRef.nativeElement.clientHeight, 0);\n\t\t\t\t\tthis.renderer.setStyle(this.headerElementRef.nativeElement, 'transform', `${this._translateDir}(${offset}px)`);\n\t\t\t\t\tthis.renderer.setStyle(this.headerElementRef.nativeElement, 'webkitTransform', `${this._translateDir}(${offset}px)`);\n\t\t\t\t}\n\n\t\t\t\tconst changeEventArg: IPageInfo = (startChanged || endChanged) ? {\n\t\t\t\t\tstartIndex: viewport.startIndex,\n\t\t\t\t\tendIndex: viewport.endIndex,\n\t\t\t\t\tscrollStartPosition: viewport.scrollStartPosition,\n\t\t\t\t\tscrollEndPosition: viewport.scrollEndPosition,\n\t\t\t\t\tstartIndexWithBuffer: viewport.startIndexWithBuffer,\n\t\t\t\t\tendIndexWithBuffer: viewport.endIndexWithBuffer,\n\t\t\t\t\tmaxScrollPosition: viewport.maxScrollPosition\n\t\t\t\t} : undefined;\n\n\n\t\t\t\tif (startChanged || endChanged || scrollPositionChanged) {\n\t\t\t\t\tconst handleChanged = () => {\n\t\t\t\t\t\t// update the scroll list to trigger re-render of components in viewport\n\t\t\t\t\t\tthis.viewPortItems = viewport.startIndexWithBuffer >= 0 && viewport.endIndexWithBuffer >= 0 ? this.items.slice(viewport.startIndexWithBuffer, viewport.endIndexWithBuffer + 1) : [];\n\t\t\t\t\t\tthis.vsUpdate.emit(this.viewPortItems);\n\n\t\t\t\t\t\tif (startChanged) {\n\t\t\t\t\t\t\tthis.vsStart.emit(changeEventArg);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endChanged) {\n\t\t\t\t\t\t\tthis.vsEnd.emit(changeEventArg);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (startChanged || endChanged) {\n\t\t\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t\t\t\tthis.vsChange.emit(changeEventArg);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (maxRunTimes > 0) {\n\t\t\t\t\t\t\tthis.refresh_internal(false, refreshCompletedCallback, maxRunTimes - 1);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (refreshCompletedCallback) {\n\t\t\t\t\t\t\trefreshCompletedCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\n\t\t\t\t\tif (this.executeRefreshOutsideAngularZone) {\n\t\t\t\t\t\thandleChanged();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.zone.run(handleChanged);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (maxRunTimes > 0 && (scrollLengthChanged || paddingChanged)) {\n\t\t\t\t\t\tthis.refresh_internal(false, refreshCompletedCallback, maxRunTimes - 1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (refreshCompletedCallback) {\n\t\t\t\t\t\trefreshCompletedCallback();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprotected getScrollElement(): HTMLElement {\n\t\treturn this.parentScroll instanceof Window ? document.scrollingElement || document.documentElement || document.body : this.parentScroll || this.element.nativeElement;\n\t}\n\n\tprotected addScrollEventHandlers(): void {\n\t\tif (this.isAngularUniversalSSR) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet scrollElement = this.getScrollElement();\n\n\t\tthis.removeScrollEventHandlers();\n\n\t\tthis.zone.runOutsideAngular(() => {\n\t\t\tif (this.parentScroll instanceof Window) {\n\t\t\t\tthis.disposeScrollHandler = this.renderer.listen('window', 'scroll', this.onScroll);\n\t\t\t\tthis.disposeResizeHandler = this.renderer.listen('window', 'resize', this.onScroll);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.disposeScrollHandler = this.renderer.listen(scrollElement, 'scroll', this.onScroll);\n\t\t\t\tif (this._checkResizeInterval > 0) {\n\t\t\t\t\tthis.checkScrollElementResizedTimer = <any>setInterval(() => { this.checkScrollElementResized(); }, this._checkResizeInterval);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected removeScrollEventHandlers(): void {\n\t\tif (this.checkScrollElementResizedTimer) {\n\t\t\tclearInterval(this.checkScrollElementResizedTimer);\n\t\t}\n\n\t\tif (this.disposeScrollHandler) {\n\t\t\tthis.disposeScrollHandler();\n\t\t\tthis.disposeScrollHandler = undefined;\n\t\t}\n\n\t\tif (this.disposeResizeHandler) {\n\t\t\tthis.disposeResizeHandler();\n\t\t\tthis.disposeResizeHandler = undefined;\n\t\t}\n\t}\n\n\tprotected getElementsOffset(): number {\n\t\tif (this.isAngularUniversalSSR) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet offset = 0;\n\n\t\tif (this.containerElementRef && this.containerElementRef.nativeElement) {\n\t\t\toffset += this.containerElementRef.nativeElement[this._offsetType];\n\t\t}\n\n\t\tif (this.parentScroll) {\n\t\t\tlet scrollElement = this.getScrollElement();\n\t\t\tlet elementClientRect = this.getElementSize(this.element.nativeElement);\n\t\t\tlet scrollClientRect = this.getElementSize(scrollElement);\n\t\t\tif (this.horizontal) {\n\t\t\t\toffset += elementClientRect.left - scrollClientRect.left;\n\t\t\t}\n\t\t\telse {\n\t\t\t\toffset += elementClientRect.top - scrollClientRect.top;\n\t\t\t}\n\n\t\t\tif (!(this.parentScroll instanceof Window)) {\n\t\t\t\toffset += scrollElement[this._scrollType];\n\t\t\t}\n\t\t}\n\n\t\treturn offset;\n\t}\n\n\tprotected countItemsPerWrapGroup(): number {\n\t\tif (this.isAngularUniversalSSR) {\n\t\t\treturn Math.round(this.horizontal ? this.ssrViewportHeight / this.ssrChildHeight : this.ssrViewportWidth / this.ssrChildWidth);\n\t\t}\n\n\t\tlet propertyName = this.horizontal ? 'offsetLeft' : 'offsetTop';\n\t\tlet children = ((this.containerElementRef && this.containerElementRef.nativeElement) || this.contentElementRef.nativeElement).children;\n\n\t\tlet childrenLength = children ? children.length : 0;\n\t\tif (childrenLength === 0) {\n\t\t\treturn 1;\n\t\t}\n\n\t\tlet firstOffset = children[0][propertyName];\n\t\tlet result = 1;\n\t\twhile (result < childrenLength && firstOffset === children[result][propertyName]) {\n\t\t\t++result;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprotected getScrollStartPosition(): number {\n\t\tlet windowScrollValue = undefined;\n\t\tif (this.parentScroll instanceof Window) {\n\t\t\twindowScrollValue = window[this._pageOffsetType];\n\t\t}\n\n\t\treturn windowScrollValue || this.getScrollElement()[this._scrollType] || 0;\n\t}\n\n\tprotected minMeasuredChildWidth: number;\n\tprotected minMeasuredChildHeight: number;\n\n\tprotected wrapGroupDimensions: WrapGroupDimensions;\n\n\tprotected resetWrapGroupDimensions(): void {\n\t\tconst oldWrapGroupDimensions = this.wrapGroupDimensions;\n\t\tthis.invalidateAllCachedMeasurements();\n\n\t\tif (!this.enableUnequalChildrenSizes || !oldWrapGroupDimensions || oldWrapGroupDimensions.numberOfKnownWrapGroupChildSizes === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsPerWrapGroup: number = this.countItemsPerWrapGroup();\n\t\tfor (let wrapGroupIndex = 0; wrapGroupIndex < oldWrapGroupDimensions.maxChildSizePerWrapGroup.length; ++wrapGroupIndex) {\n\t\t\tconst oldWrapGroupDimension: WrapGroupDimension = oldWrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex];\n\t\t\tif (!oldWrapGroupDimension || !oldWrapGroupDimension.items || !oldWrapGroupDimension.items.length) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (oldWrapGroupDimension.items.length !== itemsPerWrapGroup) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet itemsChanged = false;\n\t\t\tlet arrayStartIndex = itemsPerWrapGroup * wrapGroupIndex;\n\t\t\tfor (let i = 0; i < itemsPerWrapGroup; ++i) {\n\t\t\t\tif (!this.compareItems(oldWrapGroupDimension.items[i], this.items[arrayStartIndex + i])) {\n\t\t\t\t\titemsChanged = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!itemsChanged) {\n\t\t\t\t++this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths += oldWrapGroupDimension.childWidth || 0;\n\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights += oldWrapGroupDimension.childHeight || 0;\n\t\t\t\tthis.wrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex] = oldWrapGroupDimension;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected calculateDimensions(): IDimensions {\n\t\tlet scrollElement = this.getScrollElement();\n\n\t\tconst maxCalculatedScrollBarSize: number = 25; // Note: Formula to auto-calculate doesn't work for ParentScroll, so we default to this if not set by consuming application\n\t\tthis.calculatedScrollbarHeight = Math.max(Math.min(scrollElement.offsetHeight - scrollElement.clientHeight, maxCalculatedScrollBarSize), this.calculatedScrollbarHeight);\n\t\tthis.calculatedScrollbarWidth = Math.max(Math.min(scrollElement.offsetWidth - scrollElement.clientWidth, maxCalculatedScrollBarSize), this.calculatedScrollbarWidth);\n\n\t\tlet viewportWidth = scrollElement.offsetWidth - (this.scrollbarWidth || this.calculatedScrollbarWidth || (this.horizontal ? 0 : maxCalculatedScrollBarSize));\n\t\tlet viewportHeight = scrollElement.offsetHeight - (this.scrollbarHeight || this.calculatedScrollbarHeight || (this.horizontal ? maxCalculatedScrollBarSize : 0));\n\n\t\tlet content = (this.containerElementRef && this.containerElementRef.nativeElement) || this.contentElementRef.nativeElement;\n\n\t\tlet itemsPerWrapGroup = this.countItemsPerWrapGroup();\n\t\tlet wrapGroupsPerPage;\n\n\t\tlet defaultChildWidth;\n\t\tlet defaultChildHeight;\n\n\t\tif (this.isAngularUniversalSSR) {\n\t\t\tviewportWidth = this.ssrViewportWidth;\n\t\t\tviewportHeight = this.ssrViewportHeight;\n\t\t\tdefaultChildWidth = this.ssrChildWidth;\n\t\t\tdefaultChildHeight = this.ssrChildHeight;\n\t\t\tlet itemsPerRow = Math.max(Math.ceil(viewportWidth / defaultChildWidth), 1);\n\t\t\tlet itemsPerCol = Math.max(Math.ceil(viewportHeight / defaultChildHeight), 1);\n\t\t\twrapGroupsPerPage = this.horizontal ? itemsPerRow : itemsPerCol;\n\t\t}\n\t\telse if (!this.enableUnequalChildrenSizes) {\n\t\t\tif (content.children.length > 0) {\n\t\t\t\tif (!this.childWidth || !this.childHeight) {\n\t\t\t\t\tif (!this.minMeasuredChildWidth && viewportWidth > 0) {\n\t\t\t\t\t\tthis.minMeasuredChildWidth = viewportWidth;\n\t\t\t\t\t}\n\t\t\t\t\tif (!this.minMeasuredChildHeight && viewportHeight > 0) {\n\t\t\t\t\t\tthis.minMeasuredChildHeight = viewportHeight;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet child = content.children[0];\n\t\t\t\tlet clientRect = this.getElementSize(child);\n\t\t\t\tthis.minMeasuredChildWidth = Math.min(this.minMeasuredChildWidth, clientRect.width);\n\t\t\t\tthis.minMeasuredChildHeight = Math.min(this.minMeasuredChildHeight, clientRect.height);\n\t\t\t}\n\n\t\t\tdefaultChildWidth = this.childWidth || this.minMeasuredChildWidth || viewportWidth;\n\t\t\tdefaultChildHeight = this.childHeight || this.minMeasuredChildHeight || viewportHeight;\n\t\t\tlet itemsPerRow = Math.max(Math.ceil(viewportWidth / defaultChildWidth), 1);\n\t\t\tlet itemsPerCol = Math.max(Math.ceil(viewportHeight / defaultChildHeight), 1);\n\t\t\twrapGroupsPerPage = this.horizontal ? itemsPerRow : itemsPerCol;\n\t\t} else {\n\t\t\tlet scrollOffset = scrollElement[this._scrollType] - (this.previousViewPort ? this.previousViewPort.padding : 0);\n\n\t\t\tlet arrayStartIndex = this.previousViewPort.startIndexWithBuffer || 0;\n\t\t\tlet wrapGroupIndex = Math.ceil(arrayStartIndex / itemsPerWrapGroup);\n\n\t\t\tlet maxWidthForWrapGroup = 0;\n\t\t\tlet maxHeightForWrapGroup = 0;\n\t\t\tlet sumOfVisibleMaxWidths = 0;\n\t\t\tlet sumOfVisibleMaxHeights = 0;\n\t\t\twrapGroupsPerPage = 0;\n\n\t\t\tfor (let i = 0; i < content.children.length; ++i) {\n\t\t\t\t++arrayStartIndex;\n\t\t\t\tlet child = content.children[i];\n\t\t\t\tlet clientRect = this.getElementSize(child);\n\n\t\t\t\tmaxWidthForWrapGroup = Math.max(maxWidthForWrapGroup, clientRect.width);\n\t\t\t\tmaxHeightForWrapGroup = Math.max(maxHeightForWrapGroup, clientRect.height);\n\n\t\t\t\tif (arrayStartIndex % itemsPerWrapGroup === 0) {\n\t\t\t\t\tlet oldValue = this.wrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex];\n\t\t\t\t\tif (oldValue) {\n\t\t\t\t\t\t--this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n\t\t\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths -= oldValue.childWidth || 0;\n\t\t\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights -= oldValue.childHeight || 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t++this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n\t\t\t\t\tconst items = this.items.slice(arrayStartIndex - itemsPerWrapGroup, arrayStartIndex);\n\t\t\t\t\tthis.wrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex] = {\n\t\t\t\t\t\tchildWidth: maxWidthForWrapGroup,\n\t\t\t\t\t\tchildHeight: maxHeightForWrapGroup,\n\t\t\t\t\t\titems: items\n\t\t\t\t\t};\n\t\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths += maxWidthForWrapGroup;\n\t\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights += maxHeightForWrapGroup;\n\n\t\t\t\t\tif (this.horizontal) {\n\t\t\t\t\t\tlet maxVisibleWidthForWrapGroup = Math.min(maxWidthForWrapGroup, Math.max(viewportWidth - sumOfVisibleMaxWidths, 0));\n\t\t\t\t\t\tif (scrollOffset > 0) {\n\t\t\t\t\t\t\tlet scrollOffsetToRemove = Math.min(scrollOffset, maxVisibleWidthForWrapGroup);\n\t\t\t\t\t\t\tmaxVisibleWidthForWrapGroup -= scrollOffsetToRemove;\n\t\t\t\t\t\t\tscrollOffset -= scrollOffsetToRemove;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsumOfVisibleMaxWidths += maxVisibleWidthForWrapGroup;\n\t\t\t\t\t\tif (maxVisibleWidthForWrapGroup > 0 && viewportWidth >= sumOfVisibleMaxWidths) {\n\t\t\t\t\t\t\t++wrapGroupsPerPage;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet maxVisibleHeightForWrapGroup = Math.min(maxHeightForWrapGroup, Math.max(viewportHeight - sumOfVisibleMaxHeights, 0));\n\t\t\t\t\t\tif (scrollOffset > 0) {\n\t\t\t\t\t\t\tlet scrollOffsetToRemove = Math.min(scrollOffset, maxVisibleHeightForWrapGroup);\n\t\t\t\t\t\t\tmaxVisibleHeightForWrapGroup -= scrollOffsetToRemove;\n\t\t\t\t\t\t\tscrollOffset -= scrollOffsetToRemove;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsumOfVisibleMaxHeights += maxVisibleHeightForWrapGroup;\n\t\t\t\t\t\tif (maxVisibleHeightForWrapGroup > 0 && viewportHeight >= sumOfVisibleMaxHeights) {\n\t\t\t\t\t\t\t++wrapGroupsPerPage;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t++wrapGroupIndex;\n\n\t\t\t\t\tmaxWidthForWrapGroup = 0;\n\t\t\t\t\tmaxHeightForWrapGroup = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet averageChildWidth = this.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths / this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n\t\t\tlet averageChildHeight = this.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights / this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n\t\t\tdefaultChildWidth = this.childWidth || averageChildWidth || viewportWidth;\n\t\t\tdefaultChildHeight = this.childHeight || averageChildHeight || viewportHeight;\n\n\t\t\tif (this.horizontal) {\n\t\t\t\tif (viewportWidth > sumOfVisibleMaxWidths) {\n\t\t\t\t\twrapGroupsPerPage += Math.ceil((viewportWidth - sumOfVisibleMaxWidths) / defaultChildWidth);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (viewportHeight > sumOfVisibleMaxHeights) {\n\t\t\t\t\twrapGroupsPerPage += Math.ceil((viewportHeight - sumOfVisibleMaxHeights) / defaultChildHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet itemCount = this.items.length;\n\t\tlet itemsPerPage = itemsPerWrapGroup * wrapGroupsPerPage;\n\t\tlet pageCount_fractional = itemCount / itemsPerPage;\n\t\tlet numberOfWrapGroups = Math.ceil(itemCount / itemsPerWrapGroup);\n\n\t\tlet scrollLength = 0;\n\n\t\tlet defaultScrollLengthPerWrapGroup = this.horizontal ? defaultChildWidth : defaultChildHeight;\n\t\tif (this.enableUnequalChildrenSizes) {\n\t\t\tlet numUnknownChildSizes = 0;\n\t\t\tfor (let i = 0; i < numberOfWrapGroups; ++i) {\n\t\t\t\tlet childSize = this.wrapGroupDimensions.maxChildSizePerWrapGroup[i] && this.wrapGroupDimensions.maxChildSizePerWrapGroup[i][this._childScrollDim];\n\t\t\t\tif (childSize) {\n\t\t\t\t\tscrollLength += childSize;\n\t\t\t\t} else {\n\t\t\t\t\t++numUnknownChildSizes;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tscrollLength += Math.round(numUnknownChildSizes * defaultScrollLengthPerWrapGroup);\n\t\t} else {\n\t\t\tscrollLength = numberOfWrapGroups * defaultScrollLengthPerWrapGroup;\n\t\t}\n\n\t\tif (this.headerElementRef) {\n\t\t\tscrollLength += this.headerElementRef.nativeElement.clientHeight;\n\t\t}\n\n\t\tlet viewportLength = this.horizontal ? viewportWidth : viewportHeight;\n\t\tlet maxScrollPosition = Math.max(scrollLength - viewportLength, 0);\n\n\t\treturn {\n\t\t\titemCount: itemCount,\n\t\t\titemsPerWrapGroup: itemsPerWrapGroup,\n\t\t\twrapGroupsPerPage: wrapGroupsPerPage,\n\t\t\titemsPerPage: itemsPerPage,\n\t\t\tpageCount_fractional: pageCount_fractional,\n\t\t\tchildWidth: defaultChildWidth,\n\t\t\tchildHeight: defaultChildHeight,\n\t\t\tscrollLength: scrollLength,\n\t\t\tviewportLength: viewportLength,\n\t\t\tmaxScrollPosition: maxScrollPosition\n\t\t};\n\t}\n\n\tprotected cachedPageSize: number = 0;\n\tprotected previousScrollNumberElements: number = 0;\n\n\tprotected calculatePadding(arrayStartIndexWithBuffer: number, dimensions: IDimensions): number {\n\t\tif (dimensions.itemCount === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet defaultScrollLengthPerWrapGroup = dimensions[this._childScrollDim];\n\t\tlet startingWrapGroupIndex = Math.floor(arrayStartIndexWithBuffer / dimensions.itemsPerWrapGroup) || 0;\n\n\t\tif (!this.enableUnequalChildrenSizes) {\n\t\t\treturn defaultScrollLengthPerWrapGroup * startingWrapGroupIndex;\n\t\t}\n\n\t\tlet numUnknownChildSizes = 0;\n\t\tlet result = 0;\n\t\tfor (let i = 0; i < startingWrapGroupIndex; ++i) {\n\t\t\tlet childSize = this.wrapGroupDimensions.maxChildSizePerWrapGroup[i] && this.wrapGroupDimensions.maxChildSizePerWrapGroup[i][this._childScrollDim];\n\t\t\tif (childSize) {\n\t\t\t\tresult += childSize;\n\t\t\t} else {\n\t\t\t\t++numUnknownChildSizes;\n\t\t\t}\n\t\t}\n\t\tresult += Math.round(numUnknownChildSizes * defaultScrollLengthPerWrapGroup);\n\n\t\treturn result;\n\t}\n\n\tprotected calculatePageInfo(scrollPosition: number, dimensions: IDimensions): IPageInfo {\n\t\tlet scrollPercentage = 0;\n\t\tif (this.enableUnequalChildrenSizes) {\n\t\t\tconst numberOfWrapGroups = Math.ceil(dimensions.itemCount / dimensions.itemsPerWrapGroup);\n\t\t\tlet totalScrolledLength = 0;\n\t\t\tlet defaultScrollLengthPerWrapGroup = dimensions[this._childScrollDim];\n\t\t\tfor (let i = 0; i < numberOfWrapGroups; ++i) {\n\t\t\t\tlet childSize = this.wrapGroupDimensions.maxChildSizePerWrapGroup[i] && this.wrapGroupDimensions.maxChildSizePerWrapGroup[i][this._childScrollDim];\n\t\t\t\tif (childSize) {\n\t\t\t\t\ttotalScrolledLength += childSize;\n\t\t\t\t} else {\n\t\t\t\t\ttotalScrolledLength += defaultScrollLengthPerWrapGroup;\n\t\t\t\t}\n\n\t\t\t\tif (scrollPosition < totalScrolledLength) {\n\t\t\t\t\tscrollPercentage = i / numberOfWrapGroups;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tscrollPercentage = scrollPosition / dimensions.scrollLength;\n\t\t}\n\n\t\tlet startingArrayIndex_fractional = Math.min(Math.max(scrollPercentage * dimensions.pageCount_fractional, 0), dimensions.pageCount_fractional) * dimensions.itemsPerPage;\n\n\t\tlet maxStart = dimensions.itemCount - dimensions.itemsPerPage - 1;\n\t\tlet arrayStartIndex = Math.min(Math.floor(startingArrayIndex_fractional), maxStart);\n\t\tarrayStartIndex -= arrayStartIndex % dimensions.itemsPerWrapGroup; // round down to start of wrapGroup\n\n\t\tif (this.stripedTable) {\n\t\t\tlet bufferBoundary = 2 * dimensions.itemsPerWrapGroup;\n\t\t\tif (arrayStartIndex % bufferBoundary !== 0) {\n\t\t\t\tarrayStartIndex = Math.max(arrayStartIndex - arrayStartIndex % bufferBoundary, 0);\n\t\t\t}\n\t\t}\n\n\t\tlet arrayEndIndex = Math.ceil(startingArrayIndex_fractional) + dimensions.itemsPerPage - 1;\n\t\tlet endIndexWithinWrapGroup = (arrayEndIndex + 1) % dimensions.itemsPerWrapGroup;\n\t\tif (endIndexWithinWrapGroup > 0) {\n\t\t\tarrayEndIndex += dimensions.itemsPerWrapGroup - endIndexWithinWrapGroup; // round up to end of wrapGroup\n\t\t}\n\n\t\tif (isNaN(arrayStartIndex)) {\n\t\t\tarrayStartIndex = 0;\n\t\t}\n\t\tif (isNaN(arrayEndIndex)) {\n\t\t\tarrayEndIndex = 0;\n\t\t}\n\n\t\tarrayStartIndex = Math.min(Math.max(arrayStartIndex, 0), dimensions.itemCount - 1);\n\t\tarrayEndIndex = Math.min(Math.max(arrayEndIndex, 0), dimensions.itemCount - 1);\n\n\t\tlet bufferSize = this.bufferAmount * dimensions.itemsPerWrapGroup;\n\t\tlet startIndexWithBuffer = Math.min(Math.max(arrayStartIndex - bufferSize, 0), dimensions.itemCount - 1);\n\t\tlet endIndexWithBuffer = Math.min(Math.max(arrayEndIndex + bufferSize, 0), dimensions.itemCount - 1);\n\n\t\treturn {\n\t\t\tstartIndex: arrayStartIndex,\n\t\t\tendIndex: arrayEndIndex,\n\t\t\tstartIndexWithBuffer: startIndexWithBuffer,\n\t\t\tendIndexWithBuffer: endIndexWithBuffer,\n\t\t\tscrollStartPosition: scrollPosition,\n\t\t\tscrollEndPosition: scrollPosition + dimensions.viewportLength,\n\t\t\tmaxScrollPosition: dimensions.maxScrollPosition\n\t\t};\n\t}\n\n\tprotected calculateViewport(): IViewport {\n\t\tlet dimensions = this.calculateDimensions();\n\t\tlet offset = this.getElementsOffset();\n\n\t\tlet scrollStartPosition = this.getScrollStartPosition();\n\t\tif (scrollStartPosition > (dimensions.scrollLength + offset) && !(this.parentScroll instanceof Window)) {\n\t\t\tscrollStartPosition = dimensions.scrollLength;\n\t\t} else {\n\t\t\tscrollStartPosition -= offset;\n\t\t}\n\t\tscrollStartPosition = Math.max(0, scrollStartPosition);\n\n\t\tlet pageInfo = this.calculatePageInfo(scrollStartPosition, dimensions);\n\t\tlet newPadding = this.calculatePadding(pageInfo.startIndexWithBuffer, dimensions);\n\t\tlet newScrollLength = dimensions.scrollLength;\n\n\t\treturn {\n\t\t\tstartIndex: pageInfo.startIndex,\n\t\t\tendIndex: pageInfo.endIndex,\n\t\t\tstartIndexWithBuffer: pageInfo.startIndexWithBuffer,\n\t\t\tendIndexWithBuffer: pageInfo.endIndexWithBuffer,\n\t\t\tpadding: Math.round(newPadding),\n\t\t\tscrollLength: Math.round(newScrollLength),\n\t\t\tscrollStartPosition: pageInfo.scrollStartPosition,\n\t\t\tscrollEndPosition: pageInfo.scrollEndPosition,\n\t\t\tmaxScrollPosition: pageInfo.maxScrollPosition\n\t\t};\n\t}\n}\n\n@NgModule({\n\texports: [VirtualScrollerComponent],\n\tdeclarations: [VirtualScrollerComponent],\n\timports: [CommonModule],\n\tproviders: [\n\t\t{\n\t\t\tprovide: 'virtual-scroller-default-options',\n\t\t\tuseFactory: VIRTUAL_SCROLLER_DEFAULT_OPTIONS_FACTORY\n\t\t}\n\t]\n})\nexport class VirtualScrollerModule { }","import { Component, OnInit, HostListener, ChangeDetectionStrategy,OnDestroy, NgModule, SimpleChanges, OnChanges, ChangeDetectorRef, AfterViewChecked, ViewEncapsulation, ContentChild, ViewChild, forwardRef, Input, Output, EventEmitter, ElementRef, AfterViewInit, Pipe, PipeTransform } from '@angular/core';\nimport { FormsModule, NG_VALUE_ACCESSOR, ControlValueAccessor, NG_VALIDATORS, Validator, FormControl } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MyException } from './multiselect.model';\nimport { DropdownSettings } from './multiselect.interface';\nimport { ClickOutsideDirective, ScrollDirective, styleDirective, setPosition } from './clickOutside';\nimport { ListFilterPipe } from './list-filter';\nimport { Item, Badge, Search, TemplateRenderer, CIcon } from './menu-item';\nimport { DataService } from './multiselect.service';\nimport { Subscription, Subject  } from 'rxjs';\nimport { VirtualScrollerModule, VirtualScrollerComponent } from './virtual-scroll/virtual-scroll';\nimport { map, debounceTime, distinctUntilChanged, switchMap, tap } from 'rxjs/operators'; \n\nexport const DROPDOWN_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AngularMultiSelect),\n    multi: true\n};\nexport const DROPDOWN_CONTROL_VALIDATION: any = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => AngularMultiSelect),\n    multi: true,\n}\nconst noop = () => {\n};\n\n@Component({\n    selector: 'angular2-multiselect',\n    templateUrl: './multiselect.component.html',\n    host: { '[class]': 'defaultSettings.classes' },\n    styleUrls: ['./multiselect.component.scss'],\n    providers: [DROPDOWN_CONTROL_VALUE_ACCESSOR, DROPDOWN_CONTROL_VALIDATION],\n    encapsulation: ViewEncapsulation.None,\n})\n\nexport class AngularMultiSelect implements OnInit, ControlValueAccessor, OnChanges, Validator, AfterViewChecked, OnDestroy {\n\n    @Input()\n    data: Array<any>;\n\n    @Input()\n    settings: DropdownSettings;\n\n    @Input()\n    loading: boolean;\n\n    @Output('onSelect')\n    onSelect: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output('onDeSelect')\n    onDeSelect: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output('onSelectAll')\n    onSelectAll: EventEmitter<Array<any>> = new EventEmitter<Array<any>>();\n\n    @Output('onDeSelectAll')\n    onDeSelectAll: EventEmitter<Array<any>> = new EventEmitter<Array<any>>();\n\n    @Output('onOpen')\n    onOpen: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output('onClose')\n    onClose: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output('onScrollToEnd')\n    onScrollToEnd: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output('onFilterSelectAll')\n    onFilterSelectAll: EventEmitter<Array<any>> = new EventEmitter<Array<any>>();\n\n    @Output('onFilterDeSelectAll')\n    onFilterDeSelectAll: EventEmitter<Array<any>> = new EventEmitter<Array<any>>();\n\n    @Output('onAddFilterNewItem')\n    onAddFilterNewItem: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output('onGroupSelect')\n    onGroupSelect: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output('onGroupDeSelect')\n    onGroupDeSelect: EventEmitter<any> = new EventEmitter<any>();\n\n    @ContentChild(Item, { static: true }) itemTempl: Item;\n    @ContentChild(Badge, { static: true }) badgeTempl: Badge;\n    @ContentChild(Search, { static: true }) searchTempl: Search;\n\n\n    @ViewChild('searchInput', { static: true }) searchInput: ElementRef;\n    @ViewChild('selectedList', { static: true }) selectedListElem: ElementRef;\n    @ViewChild('dropdownList', { static: true }) dropdownListElem: ElementRef;\n\n    @HostListener('document:keyup.escape', ['$event'])\n    onEscapeDown(event: KeyboardEvent) {\n        if (this.settings.escapeToClose) {\n            this.closeDropdown();\n        }\n    }\n    virtualdata: any = [];\n    searchTerm$ = new Subject<string>();\n\n    filterPipe: ListFilterPipe;\n    public selectedItems: Array<any>;\n    public isActive: boolean = false;\n    public isSelectAll: boolean = false;\n    public isFilterSelectAll: boolean = false;\n    public isInfiniteFilterSelectAll: boolean = false;\n    public groupedData: Array<any>;\n    filter: any;\n    public chunkArray: any[];\n    public scrollTop: any;\n    public chunkIndex: any[] = [];\n    public cachedItems: any[] = [];\n    public groupCachedItems: any[] = [];\n    public totalRows: any;\n    public itemHeight: any = 41.6;\n    public screenItemsLen: any;\n    public cachedItemsLen: any;\n    public totalHeight: any;\n    public scroller: any;\n    public maxBuffer: any;\n    public lastScrolled: any;\n    public lastRepaintY: any;\n    public selectedListHeight: any;\n    public filterLength: any = 0;\n    public infiniteFilterLength: any = 0;\n    public viewPortItems: any;\n    public item: any;\n    public dropdownListYOffset: number = 0;\n    subscription: Subscription;\n    defaultSettings: DropdownSettings = {\n        singleSelection: false,\n        text: 'Select',\n        enableCheckAll: true,\n        selectAllText: 'Select All',\n        unSelectAllText: 'UnSelect All',\n        filterSelectAllText: 'Select all filtered results',\n        filterUnSelectAllText: 'UnSelect all filtered results',\n        enableSearchFilter: false,\n        searchBy: [],\n        maxHeight: 300,\n        badgeShowLimit: 999999999999,\n        classes: '',\n        disabled: false,\n        searchPlaceholderText: 'Search',\n        showCheckbox: true,\n        noDataLabel: 'No Data Available',\n        searchAutofocus: true,\n        lazyLoading: false,\n        labelKey: 'itemName',\n        primaryKey: 'id',\n        position: 'bottom',\n        autoPosition: true,\n        enableFilterSelectAll: true,\n        selectGroup: false,\n        addNewItemOnFilter: false,\n        addNewButtonText: \"Add\",\n        escapeToClose: true,\n        clearAll: true\n    }\n    randomSize:boolean = true;\n    public parseError: boolean;\n    public filteredList: any = [];\n    virtualScroollInit: boolean = false;\n    @ViewChild(VirtualScrollerComponent, {static: false})\n    private virtualScroller: VirtualScrollerComponent;\n    constructor(public _elementRef: ElementRef, private cdr: ChangeDetectorRef, private ds: DataService) {\n        this.searchTerm$.asObservable().pipe(\n        debounceTime(1000),\n        distinctUntilChanged(),\n        tap(term => term)\n        ).subscribe(val => {\n            this.filterInfiniteList(val);\n        });\n    }\n    ngOnInit() {\n        this.settings = Object.assign(this.defaultSettings, this.settings);\n\n        this.cachedItems = this.cloneArray(this.data);\n        if (this.settings.position == 'top') {\n            setTimeout(() => {\n                this.selectedListHeight = { val: 0 };\n                this.selectedListHeight.val = this.selectedListElem.nativeElement.clientHeight;\n            });\n        }\n        this.subscription = this.ds.getData().subscribe(data => {\n            if (data) {\n                let len = 0;\n                data.forEach((obj: any, i: any) => {\n                    if (!obj.hasOwnProperty('grpTitle')) {\n                        len++;\n                    }\n                });\n                this.filterLength = len;\n                this.onFilterChange(data);\n            }\n\n        });\n        setTimeout(() => {\n            this.calculateDropdownDirection();\n        });\n        this.virtualScroollInit = false;\n    }\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.data && !changes.data.firstChange) {\n            if (this.settings.groupBy) {\n                this.groupedData = this.transformData(this.data, this.settings.groupBy);\n                if (this.data.length == 0) {\n                    this.selectedItems = [];\n                }\n            }\n            this.cachedItems = this.cloneArray(this.data);\n        }\n        if (changes.settings && !changes.settings.firstChange) {\n            this.settings = Object.assign(this.defaultSettings, this.settings);\n        }\n        if (changes.loading) {\n            console.log(this.loading);\n        }\n        if(this.settings.lazyLoading && this.virtualScroollInit && changes.data){\n            this.virtualdata = changes.data.currentValue;\n        }\n    }\n    ngDoCheck() {\n        if (this.selectedItems) {\n            if (this.selectedItems.length == 0 || this.data.length == 0 || this.selectedItems.length < this.data.length) {\n                this.isSelectAll = false;\n            }\n        }\n    }\n    ngAfterViewInit() {\n        if (this.settings.lazyLoading) {\n            // this._elementRef.nativeElement.getElementsByClassName(\"lazyContainer\")[0].addEventListener('scroll', this.onScroll.bind(this));\n        }\n    }\n    ngAfterViewChecked() {\n        if (this.selectedListElem.nativeElement.clientHeight && this.settings.position == 'top' && this.selectedListHeight) {\n            this.selectedListHeight.val = this.selectedListElem.nativeElement.clientHeight;\n            this.cdr.detectChanges();\n        }\n    }\n    onItemClick(item: any, index: number, evt: Event) {\n        if (this.settings.disabled) {\n            return false;\n        }\n\n        let found = this.isSelected(item);\n        let limit = this.selectedItems.length < this.settings.limitSelection ? true : false;\n\n        if (!found) {\n            if (this.settings.limitSelection) {\n                if (limit) {\n                    this.addSelected(item);\n                    this.onSelect.emit(item);\n                }\n            }\n            else {\n                this.addSelected(item);\n                this.onSelect.emit(item);\n            }\n\n        }\n        else {\n            this.removeSelected(item);\n            this.onDeSelect.emit(item);\n        }\n        if (this.isSelectAll || this.data.length > this.selectedItems.length) {\n            this.isSelectAll = false;\n        }\n        if (this.data.length == this.selectedItems.length) {\n            this.isSelectAll = true;\n        }\n        if (this.settings.groupBy) {\n            this.updateGroupInfo(item);\n        }\n    }\n    public validate(c: FormControl): any {\n        return null;\n    }\n    private onTouchedCallback: (_: any) => void = noop;\n    private onChangeCallback: (_: any) => void = noop;\n\n    writeValue(value: any) {\n        if (value !== undefined && value !== null && value !== '') {\n            if (this.settings.singleSelection) {\n                if (this.settings.groupBy) {\n                    this.groupedData = this.transformData(this.data, this.settings.groupBy);\n                    this.groupCachedItems = this.cloneArray(this.groupedData);\n                    this.selectedItems = [value[0]];\n                } else {\n                    try {\n\n                        if (value.length > 1) {\n                            this.selectedItems = [value[0]];\n                            throw new MyException(404, { \"msg\": \"Single Selection Mode, Selected Items cannot have more than one item.\" });\n                        }\n                        else {\n                            this.selectedItems = value;\n                        }\n                    }\n                    catch (e) {\n                        console.error(e.body.msg);\n                    }\n                }\n\n            }\n            else {\n                if (this.settings.limitSelection) {\n                    this.selectedItems = value.slice(0, this.settings.limitSelection);\n                }\n                else {\n                    this.selectedItems = value;\n                }\n                if (this.selectedItems.length === this.data.length && this.data.length > 0) {\n                    this.isSelectAll = true;\n                }\n                if (this.settings.groupBy) {\n                    this.groupedData = this.transformData(this.data, this.settings.groupBy);\n                    this.groupCachedItems = this.cloneArray(this.groupedData);\n                }\n            }\n        } else {\n            this.selectedItems = [];\n        }\n    }\n\n    //From ControlValueAccessor interface\n    registerOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n\n    //From ControlValueAccessor interface\n    registerOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\n    trackByFn(index: number, item: any) {\n        return item[this.settings.primaryKey];\n    }\n    isSelected(clickedItem: any) {\n        let found = false;\n        this.selectedItems && this.selectedItems.forEach(item => {\n            if (clickedItem[this.settings.primaryKey] === item[this.settings.primaryKey]) {\n                found = true;\n            }\n        });\n        return found;\n    }\n    addSelected(item: any) {\n        if (this.settings.singleSelection) {\n            this.selectedItems = [];\n            this.selectedItems.push(item);\n            this.closeDropdown();\n        }\n        else\n            this.selectedItems.push(item);\n        this.onChangeCallback(this.selectedItems);\n        this.onTouchedCallback(this.selectedItems);\n    }\n    removeSelected(clickedItem: any) {\n        this.selectedItems && this.selectedItems.forEach(item => {\n            if (clickedItem[this.settings.primaryKey] === item[this.settings.primaryKey]) {\n                this.selectedItems.splice(this.selectedItems.indexOf(item), 1);\n            }\n        });\n        this.onChangeCallback(this.selectedItems);\n        this.onTouchedCallback(this.selectedItems);\n    }\n    toggleDropdown(evt: any) {\n        if (this.settings.disabled) {\n            return false;\n        }\n        this.isActive = !this.isActive;\n        if (this.isActive) {\n            if (this.settings.searchAutofocus && this.searchInput && this.settings.enableSearchFilter && !this.searchTempl) {\n                setTimeout(() => {\n                    this.searchInput.nativeElement.focus();\n                }, 0);\n            }\n            this.onOpen.emit(true);\n        }\n        else {\n            this.onClose.emit(false);\n        }\n        setTimeout(() => {\n            this.calculateDropdownDirection();\n        }, 0);\n        if(this.settings.lazyLoading){\n            this.virtualdata = this.data;\n            this.virtualScroollInit = true;\n        }\n        evt.preventDefault();\n    }\n    public openDropdown() {\n        if (this.settings.disabled) {\n            return false;\n        }\n        this.isActive = true;\n        if (this.settings.searchAutofocus && this.searchInput && this.settings.enableSearchFilter && !this.searchTempl) {\n            setTimeout(() => {\n                this.searchInput.nativeElement.focus();\n            }, 0);\n        }\n        this.onOpen.emit(true);\n    }\n    public closeDropdown() {\n        if (this.searchInput && this.settings.lazyLoading) {\n            this.searchInput.nativeElement.value = \"\";\n        }\n        if (this.searchInput) {\n            this.searchInput.nativeElement.value = \"\";\n        }\n        this.filter = \"\";\n        this.isActive = false;\n        this.onClose.emit(false);\n    }\n    public closeDropdownOnClickOut() {\n        if (this.isActive) {\n            if (this.searchInput && this.settings.lazyLoading) {\n                this.searchInput.nativeElement.value = \"\";\n            }\n            if (this.searchInput) {\n                this.searchInput.nativeElement.value = \"\";\n            }\n            this.filter = \"\";\n            this.isActive = false;\n            this.clearSearch();\n            this.onClose.emit(false);\n        }\n    }\n    toggleSelectAll() {\n        if (!this.isSelectAll) {\n            this.selectedItems = [];\n            if (this.settings.groupBy) {\n                this.groupedData.forEach((obj) => {\n                    obj.selected = true;\n                })\n                this.groupCachedItems.forEach((obj) => {\n                    obj.selected = true;\n                })\n            }\n            this.selectedItems = this.data.slice();\n            this.isSelectAll = true;\n            this.onChangeCallback(this.selectedItems);\n            this.onTouchedCallback(this.selectedItems);\n\n            this.onSelectAll.emit(this.selectedItems);\n        }\n        else {\n            if (this.settings.groupBy) {\n                this.groupedData.forEach((obj) => {\n                    obj.selected = false;\n                });\n                this.groupCachedItems.forEach((obj) => {\n                    obj.selected = false;\n                })\n            }\n            this.selectedItems = [];\n            this.isSelectAll = false;\n            this.onChangeCallback(this.selectedItems);\n            this.onTouchedCallback(this.selectedItems);\n\n            this.onDeSelectAll.emit(this.selectedItems);\n        }\n    }\n    filterGroupedList() {\n        if (this.filter == \"\" || this.filter == null) {\n            this.clearSearch();\n            return;\n        }\n        this.groupedData = this.cloneArray(this.groupCachedItems);\n        this.groupedData = this.groupedData.filter(obj => {\n            let arr = obj.list.filter(t => {\n                return t.itemName.toLowerCase().indexOf(this.filter.toLowerCase()) > -1;\n            });\n            obj.list = arr;\n            return arr.some(cat => {\n                return cat.itemName.toLowerCase().indexOf(this.filter.toLowerCase()) > -1;\n            }\n            )\n        });\n        console.log(this.groupedData);\n    }\n    toggleFilterSelectAll() {\n        if (!this.isFilterSelectAll) {\n            let added = [];\n            if (this.settings.groupBy) {\n                this.groupedData.forEach((item: any) => {\n                    if (item.list) {\n                        item.list.forEach((el: any) => {\n                            if (!this.isSelected(el)) {\n                                this.addSelected(el);\n                                added.push(el);\n                            }\n                        });\n                    }\n                    this.updateGroupInfo(item);\n\n                });\n\n            }\n            else {\n                this.ds.getFilteredData().forEach((item: any) => {\n                    if (!this.isSelected(item)) {\n                        this.addSelected(item);\n                        added.push(item);\n                    }\n\n                });\n            }\n\n            this.isFilterSelectAll = true;\n            this.onFilterSelectAll.emit(added);\n        }\n        else {\n            let removed = [];\n            if (this.settings.groupBy) {\n                this.groupedData.forEach((item: any) => {\n                    if (item.list) {\n                        item.list.forEach((el: any) => {\n                            if (this.isSelected(el)) {\n                                this.removeSelected(el);\n                                removed.push(el);\n                            }\n                        });\n                    }\n                });\n            }\n            else {\n                this.ds.getFilteredData().forEach((item: any) => {\n                    if (this.isSelected(item)) {\n                        this.removeSelected(item);\n                        removed.push(item);\n                    }\n\n                });\n            }\n            this.isFilterSelectAll = false;\n            this.onFilterDeSelectAll.emit(removed);\n        }\n    }\n    toggleInfiniteFilterSelectAll() {\n        if (!this.isInfiniteFilterSelectAll) {\n            this.data.forEach((item: any) => {\n                if (!this.isSelected(item)) {\n                    this.addSelected(item);\n                }\n\n            });\n            this.isInfiniteFilterSelectAll = true;\n        }\n        else {\n            this.data.forEach((item: any) => {\n                if (this.isSelected(item)) {\n                    this.removeSelected(item);\n                }\n\n            });\n            this.isInfiniteFilterSelectAll = false;\n        }\n    }\n    clearSearch() {\n        if (this.settings.groupBy) {\n            this.groupedData = [];\n            this.groupCachedItems.forEach((obj) => {\n                obj.selected = false;\n            })\n            this.groupedData = this.cloneArray(this.groupCachedItems);\n        }\n        this.filter = \"\";\n        this.isFilterSelectAll = false;\n\n    }\n    onFilterChange(data: any) {\n        if (this.filter && this.filter == \"\" || data.length == 0) {\n            this.isFilterSelectAll = false;\n        }\n        let cnt = 0;\n        data.forEach((item: any) => {\n\n            if (!item.hasOwnProperty('grpTitle') && this.isSelected(item)) {\n                cnt++;\n            }\n        });\n\n        if (cnt > 0 && this.filterLength == cnt) {\n            this.isFilterSelectAll = true;\n        }\n        else if (cnt > 0 && this.filterLength != cnt) {\n            this.isFilterSelectAll = false;\n        }\n        this.cdr.detectChanges();\n    }\n    cloneArray(arr: any) {\n        let i, copy;\n\n        if (Array.isArray(arr)) {\n            return JSON.parse(JSON.stringify(arr));\n        } else if (typeof arr === 'object') {\n            throw 'Cannot clone array containing an object!';\n        } else {\n            return arr;\n        }\n    }\n    updateGroupInfo(item: any) {\n        let key = this.settings.groupBy;\n        this.groupedData.forEach((obj: any) => {\n            let cnt = 0;\n            if (obj.grpTitle && (item[key] == obj[key])) {\n                if (obj.list) {\n                    obj.list.forEach((el: any) => {\n                        if (this.isSelected(el)) {\n                            cnt++;\n                        }\n                    });\n                }\n            }\n            if (obj.list && (cnt === obj.list.length) && (item[key] == obj[key])) {\n                obj.selected = true;\n            }\n            else if (obj.list && (cnt != obj.list.length) && (item[key] == obj[key])) {\n                obj.selected = false;\n            }\n        });\n        this.groupCachedItems.forEach((obj: any) => {\n            let cnt = 0;\n            if (obj.grpTitle && (item[key] == obj[key])) {\n                if (obj.list) {\n                    obj.list.forEach((el: any) => {\n                        if (this.isSelected(el)) {\n                            cnt++;\n                        }\n                    });\n                }\n            }\n            if (obj.list && (cnt === obj.list.length) && (item[key] == obj[key])) {\n                obj.selected = true;\n            }\n            else if (obj.list && (cnt != obj.list.length) && (item[key] == obj[key])) {\n                obj.selected = false;\n            }\n        });\n    }\n    transformData(arr: Array<any>, field: any): Array<any> {\n        const groupedObj: any = arr.reduce((prev: any, cur: any) => {\n            if (!prev[cur[field]]) {\n                prev[cur[field]] = [cur];\n            } else {\n                prev[cur[field]].push(cur);\n            }\n            return prev;\n        }, {});\n        const tempArr: any = [];\n        Object.keys(groupedObj).map((x: any) => {\n            let obj: any = {};\n            obj[\"grpTitle\"] = true;\n            obj[this.settings.labelKey] = x;\n            obj[this.settings.groupBy] = x;\n            obj['selected'] = false;\n            obj['list'] = [];\n            let cnt = 0;\n            groupedObj[x].forEach((item: any) => {\n                item['list'] = [];\n                obj.list.push(item);\n                if (this.isSelected(item)) {\n                    cnt++;\n                }\n            });\n            if (cnt == obj.list.length) {\n                obj.selected = true;\n            }\n            else {\n                obj.selected = false;\n            }\n            tempArr.push(obj);\n            // obj.list.forEach((item: any) => {\n            //     tempArr.push(item);\n            // });\n        });\n        return tempArr;\n    }\n    public filterInfiniteList(evt: any) {\n        let filteredElems: Array<any> = [];\n        if (this.settings.groupBy) {\n            this.groupedData = this.groupCachedItems.slice();\n        }\n        else {\n            this.data = this.cachedItems.slice();\n            this.virtualdata = this.cachedItems.slice();\n        }\n\n        if ((evt != null || evt != '') && !this.settings.groupBy) {\n            if (this.settings.searchBy.length > 0) {\n                for (let t = 0; t < this.settings.searchBy.length; t++) {\n\n                    this.virtualdata.filter((el: any) => {\n                        if (el[this.settings.searchBy[t].toString()].toString().toLowerCase().indexOf(evt.toString().toLowerCase()) >= 0) {\n                            filteredElems.push(el);\n                        }\n                    });\n                }\n\n            }\n            else {\n                this.virtualdata.filter(function (el: any) {\n                    for (let prop in el) {\n                        if (el[prop].toString().toLowerCase().indexOf(evt.toString().toLowerCase()) >= 0) {\n                            filteredElems.push(el);\n                            break;\n                        }\n                    }\n                });\n            }\n            this.virtualdata = [];\n            this.virtualdata = filteredElems;\n            this.infiniteFilterLength = this.virtualdata.length;\n        }\n        if (evt.toString() != '' && this.settings.groupBy) {\n            this.groupedData.filter(function (el: any) {\n                if (el.hasOwnProperty('grpTitle')) {\n                    filteredElems.push(el);\n                }\n                else {\n                    for (let prop in el) {\n                        if (el[prop].toString().toLowerCase().indexOf(evt.toString().toLowerCase()) >= 0) {\n                            filteredElems.push(el);\n                            break;\n                        }\n                    }\n                }\n            });\n            this.groupedData = [];\n            this.groupedData = filteredElems;\n            this.infiniteFilterLength = this.groupedData.length;\n        }\n        else if (evt.toString() == '' && this.cachedItems.length > 0) {\n            this.virtualdata = [];\n            this.virtualdata = this.cachedItems;\n            this.infiniteFilterLength = 0;\n        }\n        this.virtualScroller.refresh();\n    }\n    resetInfiniteSearch() {\n        this.filter = \"\";\n        this.isInfiniteFilterSelectAll = false;\n        this.virtualdata = [];\n        this.virtualdata = this.cachedItems;\n        this.groupedData = this.groupCachedItems;\n        this.infiniteFilterLength = 0;\n    }\n    onScrollEnd(e: any) {\n        if(e.endIndex === this.data.length - 1 || e.startIndex === 0){\n            \n        }\n        this.onScrollToEnd.emit(e);\n        \n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n\n    }\n    selectGroup(item: any) {\n        if (item.selected) {\n            item.selected = false;\n            item.list.forEach((obj: any) => {\n                this.removeSelected(obj);\n            });\n            this.updateGroupInfo(item);\n            this.onGroupSelect.emit(item);\n        }\n        else {\n            item.selected = true;\n            item.list.forEach((obj: any) => {\n                if (!this.isSelected(obj)) {\n                    this.addSelected(obj);\n                }\n\n            });\n            this.updateGroupInfo(item);\n            this.onGroupDeSelect.emit(item);\n        }\n\n\n    }\n    addFilterNewItem() {\n        this.onAddFilterNewItem.emit(this.filter);\n        this.filterPipe = new ListFilterPipe(this.ds);\n        this.filterPipe.transform(this.data, this.filter, this.settings.searchBy);\n    }\n    calculateDropdownDirection() {\n        let shouldOpenTowardsTop = this.settings.position == 'top';\n        if (this.settings.autoPosition) {\n            const dropdownHeight = this.dropdownListElem.nativeElement.clientHeight;\n            const viewportHeight = document.documentElement.clientHeight;\n            const selectedListBounds = this.selectedListElem.nativeElement.getBoundingClientRect();\n\n            const spaceOnTop: number = selectedListBounds.top;\n            const spaceOnBottom: number = viewportHeight - selectedListBounds.top;\n            if (spaceOnBottom < spaceOnTop && dropdownHeight < spaceOnTop) {\n                this.openTowardsTop(true);\n            }\n            else {\n                this.openTowardsTop(false);\n            }\n            // Keep preference if there is not enough space on either the top or bottom\n            /* \t\t\tif (spaceOnTop || spaceOnBottom) {\n                            if (shouldOpenTowardsTop) {\n                                shouldOpenTowardsTop = spaceOnTop;\n                            } else {\n                                shouldOpenTowardsTop = !spaceOnBottom;\n                            }\n                        } */\n        }\n\n    }\n    openTowardsTop(value: boolean) {\n        if (value && this.selectedListElem.nativeElement.clientHeight) {\n            this.dropdownListYOffset = 15 + this.selectedListElem.nativeElement.clientHeight;\n        } else {\n            this.dropdownListYOffset = 0;\n        }\n    }\n    clearSelection(e: any) {\n        this.clearSearch();\n        this.selectedItems = [];\n        this.onDeSelectAll.emit(this.selectedItems);\n    }\n}\n\n@NgModule({\n    imports: [CommonModule, FormsModule, VirtualScrollerModule],\n    declarations: [AngularMultiSelect, ClickOutsideDirective, ScrollDirective, styleDirective, ListFilterPipe, Item, TemplateRenderer, Badge, Search, setPosition, CIcon],\n    exports: [AngularMultiSelect, ClickOutsideDirective, ScrollDirective, styleDirective, ListFilterPipe, Item, TemplateRenderer, Badge, Search, setPosition, CIcon],\n    providers: [DataService]\n})\nexport class AngularMultiSelectModule { }\n"]}